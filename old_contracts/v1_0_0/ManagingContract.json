{
  "contractName": "ManagingContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isActiveMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isNotReservedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isNotZeroAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "adapterId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "adapterAddress",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "flags",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "adapterId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "adapterAddress",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "flags",
              "type": "uint128"
            }
          ],
          "internalType": "struct IManaging.ProposalInput",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "keys",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "processProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isNotReservedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isNotZeroAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"processProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"adapterId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"adapterAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"flags\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"adapterId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"adapterAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"flags\",\"type\":\"uint128\"}],\"internalType\":\"struct IManaging.ProposalInput\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"submitProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"processProposal(address,bytes32)\":{\"details\":\"Only members can process a proposal.Only if the voting pass the proposal is processed.Reverts when the adapter address is already in use and it is an adapter addition.\",\"params\":{\"dao\":\"The dao address.\",\"proposalId\":\"The guild kick proposal id.\"}},\"submitProposal(address,bytes32,(bytes32,address,uint128),bytes32[],uint256[],bytes)\":{\"details\":\"If the adapterAddress is equal to 0x0, the adapterId is removed from the registry if available.If the adapterAddress is a reserved address, it reverts.keys and value must have the same length.proposalId can not be reused.\",\"params\":{\"dao\":\"The dao address.\",\"proposal\":\"proposal details\",\"proposalId\":\"The guild kick proposal id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isNotReservedAddress(address)\":{\"notice\":\"Checks if a given address is reserved.\"},\"isNotZeroAddress(address)\":{\"notice\":\"Checks if a given address is zeroed.\"},\"processProposal(address,bytes32)\":{\"notice\":\"Processes a proposal that was sponsored.\"},\"submitProposal(address,bytes32,(bytes32,address,uint128),bytes32[],uint256[],bytes)\":{\"notice\":\"Creates a proposal to replace, remove or add an adapter.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/Managing.sol\":\"ManagingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/Managing.sol\":{\"keccak256\":\"0x8a3a118b89d6e1686557ae4a7fd2113835919085a8e279c90f145dcf4989ae40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d18ac13147df9fdd5d5e51052513cb23acee5cdf08561eb071a265aefdb9c86\",\"dweb:/ipfs/QmaAyXWxgzMbx5cXiyCGyqeaGR8a42UkxC9k25G7pgU7Et\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IManaging.sol\":{\"keccak256\":\"0xe108bce54873a6d6538a6e968e83146bb05df2b77370e06569c46600b6eb0cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f5d5f98c3827c58fa1f6fdac042d55bfbeb1c4224caa5e3c7ea79c78077fc2c\",\"dweb:/ipfs/QmYPCy4Q6cSUyEYMJNnXuynoZfa8SgjEoonE6QpjKVHLCB\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x0df17bf469281aa5b32c61b6bed247a661ad4ef79072b4a2c38014a02598152b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1414a2d073d7d72b5369e000f293fe141fdb1a963807161110ac0b16cd88370\",\"dweb:/ipfs/QmeoZ9X8vZUSYpvMAZKY7zmaVKFBK1uRPhQ35aUizVJf9S\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x4292eac9a539c00c3cf8420b06743fffb52b41093b1c1b91b1021fdc1c2232ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fa3cee693028b6dfd09c2fb6aa94be39ec0f43e290fd9650c8bae4c35ec13d\",\"dweb:/ipfs/Qmdv6QPDpK4NnkwAocSZWvNceCKDxUSQPVraskM2YPbxzp\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x954c60da6fd8f19e31fa37448e3344c165778d0daa64d2b2c2d7ecf0d2af5016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a6da8ae68cba16b886809a0aa675e11be044f383038c59a070ff19349b9bf76\",\"dweb:/ipfs/Qmcq96xLNf2AgpQhrULgAsKzkM7yziYMs9LAShU3qcwh1i\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/extensions/bank/Bank.sol\":{\"keccak256\":\"0x49778c295b839ee7af037ebee8bd8d3586c824a5fe0a5768a6780b55d4972540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d148834e6a3fd81ab33a60f6873f9a1c263a734c8e0add805ca3db2919c12c3\",\"dweb:/ipfs/QmTy5vWGC35vrAqkcxptSERQfF7DEkGvfV9bJFGdvXs3Mh\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x0c79ba87785d8b3b8092b2220f4abb8c6636816decf10c3cf85f6b3ccb4b3708\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed5e0fdccfdc93f00d34cb255943c9a9b56b9e732f6fd526e5322be3db06a835\",\"dweb:/ipfs/QmeVzV8pdwf9tCR8ZPh6QvsbZtNiZoJBv4HwbzML6KMYnG\"]},\"/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xcb944c3b5bee2bc9afa2858f2abdf23dc2283626ad3d471d1f25eda545ba52db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfa63d7f7060c98130f97f5798b108e1a7b47c294d545c96f642f0c38aed698\",\"dweb:/ipfs/QmezwDxDGH8JJCDRstAEbSpEa86TeVMV5KUC7fZTcjHVQb\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611de6806100206000396000f3fe60806040526004361061007f5760003560e01c8063b244a41d1161004e578063b244a41d1461016b578063ca0f463314610198578063ef6a2499146101b8578063fc258031146101d8576100bf565b80635cb75276146100c45780638ecf7720146100fc5780639573167d14610129578063a0400a021461014b576100bf565b366100bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611af2565b60405180910390fd5b600080fd5b3480156100d057600080fd5b506100e46100df366004611462565b6101f8565b6040516100f3939291906117b4565b60405180910390f35b34801561010857600080fd5b5061011c6101173660046114a9565b610249565b6040516100f39190611774565b34801561013557600080fd5b506101496101443660046114e1565b610516565b005b34801561015757600080fd5b506101496101663660046114f3565b610ad2565b34801561017757600080fd5b5061018b61018636600461168b565b61117c565b6040516100f3919061177f565b3480156101a457600080fd5b5061011c6101b336600461142a565b6111d8565b3480156101c457600080fd5b5061011c6101d336600461142a565b6111f3565b3480156101e457600080fd5b5061011c6101f336600461166a565b61125e565b6000602081815292815260408082209093529081522080546001820154600490920154909173ffffffffffffffffffffffffffffffffffffffff16906fffffffffffffffffffffffffffffffff1683565b6000808373ffffffffffffffffffffffffffffffffffffffff1663fefbd8757fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a06040518263ffffffff1660e01b81526004016102a5919061177f565b60206040518083038186803b1580156102bd57600080fd5b505afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190611446565b905073ffffffffffffffffffffffffffffffffffffffff81161561046a576040517fc89bb8ba00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063c89bb8ba9061036890879060040161172c565b60206040518083038186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190611446565b905060008273ffffffffffffffffffffffffffffffffffffffff1663f7888aec83620ff1ce6040518363ffffffff1660e01b81526004016103fa92919061174d565b60206040518083038186803b15801561041257600080fd5b505afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190611446565b73ffffffffffffffffffffffffffffffffffffffff161192505050610510565b6040517fa230c52400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a230c524906104bc90869060040161172c565b60206040518083038186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c919061148d565b9150505b92915050565b81438173ffffffffffffffffffffffffffffffffffffffff1663b21634826040518163ffffffff1660e01b815260040160206040518083038186803b15801561055e57600080fd5b505afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190611652565b14156105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119f0565b8073ffffffffffffffffffffffffffffffffffffffff166310fdb0a26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff8381166000908152602081815260408083208684528252808320815160a0810183528154815260018201549095168584015260028101805483518186028101860185528181529596959294938601938301828280156106c157602002820191906000526020600020905b8154815260200190600101908083116106ad575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561071957602002820191906000526020600020905b815481526020019060010190808311610705575b50505091835250506004918201546fffffffffffffffffffffffffffffffff166020909101526040517f40de703e00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff8716916340de703e916107959188910161177f565b60206040518083038186803b1580156107ad57600080fd5b505afa1580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190611446565b905073ffffffffffffffffffffffffffffffffffffffff8116610834576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611b29565b60026040517f76225e7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906376225e739061088a90899089906004016118f8565b602060405180830381600087803b1580156108a457600080fd5b505af11580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190611633565b6005811115610914577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461094b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119b9565b6040517f30490e9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906330490e919061099d90879060040161177f565b600060405180830381600087803b1580156109b757600080fd5b505af11580156109cb573d6000803e3d6000fd5b5050835160208501516080860151604080880151606089015191517fa37ff5e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8d16975063a37ff5e49650610a3995949392906004016117f2565b600060405180830381600087803b158015610a5357600080fd5b505af1158015610a67573d6000803e3d6000fd5b5050505050508073ffffffffffffffffffffffffffffffffffffffff1663d4f7af436040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b50505050505050565b85610add813361127b565b86438173ffffffffffffffffffffffffffffffffffffffff1663b21634826040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2557600080fd5b505afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611652565b1415610b95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119f0565b8073ffffffffffffffffffffffffffffffffffffffff166310fdb0a26040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bdd57600080fd5b505af1158015610bf1573d6000803e3d6000fd5b505050508351855114610c30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611a5e565b60408601516fffffffffffffffffffffffffffffffff90811610610c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611abb565b610c8d86602001516111f3565b610cc3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b69061195c565b6040517fb73dc38900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169063b73dc38990610d15908a9060040161177f565b600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505050506040518060a0016040528087600001518152602001876020015173ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200187604001516fffffffffffffffffffffffffffffffff168152506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610e5e9291906112bf565b5060608201518051610e7a9160038401916020909101906112bf565b5060809190910151600491820180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9092169190911790556040517f17ba7d8500000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff8b16916317ba7d8591610f38917f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab3910161177f565b60206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f889190611446565b90508873ffffffffffffffffffffffffffffffffffffffff1663896ae9ba898373ffffffffffffffffffffffffffffffffffffffff1663966917d08d308a336040518563ffffffff1660e01b8152600401610fe694939291906118ac565b602060405180830381600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611446565b846040518463ffffffff1660e01b815260040161105793929190611788565b600060405180830381600087803b15801561107157600080fd5b505af1158015611085573d6000803e3d6000fd5b50506040517f2b0974d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250632b0974d091506110df908c908c90899060040161191e565b600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b50505050508073ffffffffffffffffffffffffffffffffffffffff1663d4f7af436040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561115a57600080fd5b505af115801561116e573d6000803e3d6000fd5b505050505050505050505050565b600081151561118b858561125e565b1515146111ce5781156111b4576111a3836002611be8565b6111ad9085611b8a565b90506111d1565b6111bf836002611be8565b6111ad9085611ccf565b6111d1565b50825b9392505050565b73ffffffffffffffffffffffffffffffffffffffff16151590565b600073ffffffffffffffffffffffffffffffffffffffff821661dead14801590611235575073ffffffffffffffffffffffffffffffffffffffff821661babe14155b8015610510575073ffffffffffffffffffffffffffffffffffffffff8216614bec141592915050565b6000611271600260ff841685901c611ce6565b6001149392505050565b6112858282610249565b6112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611a27565b5050565b8280548282559060005260206000209081019282156112fa579160200282015b828111156112fa5782518255916020019190600101906112df565b5061130692915061130a565b5090565b5b80821115611306576000815560010161130b565b600082601f83011261132f578081fd5b8135602067ffffffffffffffff82111561134b5761134b611d4e565b808202611359828201611b60565b838152828101908684018388018501891015611373578687fd5b8693505b85841015611395578035835260019390930192918401918401611377565b50979650505050505050565b600082601f8301126113b1578081fd5b813567ffffffffffffffff8111156113cb576113cb611d4e565b6113fc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b60565b818152846020838601011115611410578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561143b578081fd5b81356111d181611d7d565b600060208284031215611457578081fd5b81516111d181611d7d565b60008060408385031215611474578081fd5b823561147f81611d7d565b946020939093013593505050565b60006020828403121561149e578081fd5b81516111d181611da2565b600080604083850312156114bb578182fd5b82356114c681611d7d565b915060208301356114d681611d7d565b809150509250929050565b60008060408385031215611474578182fd5b60008060008060008086880361010081121561150d578283fd5b873561151881611d7d565b96506020880135955060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082011215611550578283fd5b506040516060810167ffffffffffffffff828210818311171561157557611575611d4e565b8160405260408a0135835260608a0135915061159082611d7d565b81602084015260808a013591506fffffffffffffffffffffffffffffffff821682146115ba578485fd5b81604084015282965060a08a01359250808311156115d6578485fd5b6115e28b848c0161131f565b955060c08a01359250808311156115f7578485fd5b6116038b848c0161131f565b945060e08a0135925080831115611618578384fd5b505061162689828a016113a1565b9150509295509295509295565b600060208284031215611644578081fd5b8151600681106111d1578182fd5b600060208284031215611663578081fd5b5051919050565b6000806040838503121561167c578182fd5b50508035926020909101359150565b60008060006060848603121561169f578081fd5b833592506020840135915060408401356116b881611da2565b809150509250925092565b60008151808452815b818110156116e8576020818501810151868301820152016116cc565b818111156116f95782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b90815260200190565b92835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b92835273ffffffffffffffffffffffffffffffffffffffff9190911660208301526fffffffffffffffffffffffffffffffff16604082015260600190565b600060a08201878352602073ffffffffffffffffffffffffffffffffffffffff8816818501526fffffffffffffffffffffffffffffffff8716604085015260a0606085015281865180845260c0860191508288019350845b818110156118665784518352938301939183019160010161184a565b505084810360808601528551808252908201925081860190845b8181101561189c57825185529383019391830191600101611880565b50929a9950505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152608060408401526118e460808401866116c3565b915080841660608401525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff851682528360208301526060604083015261195360608301846116c3565b95945050505050565b60208082526023908201527f616461707465722061646472657373206973207265736572766564206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b60208082526010908201527f7265656e7472616e637920677561726400000000000000000000000000000000604082015260600190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526031908201527f6d75737420626520616e20657175616c206e756d626572206f6620636f6e666960408201527f67206b65797320616e642076616c756573000000000000000000000000000000606082015260800190565b60208082526018908201527f666c61677320706172616d65746572206f766572666c6f770000000000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b60208082526011908201527f61646170746572206e6f7420666f756e64000000000000000000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715611b8257611b82611d4e565b604052919050565b60008219821115611b9d57611b9d611d1f565b500190565b80825b6001808611611bb45750611bdf565b818704821115611bc657611bc6611d1f565b80861615611bd357918102915b9490941c938002611ba5565b94509492505050565b60006111d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484600082611c1f575060016111d1565b81611c2c575060006111d1565b8160018114611c425760028114611c4c57611c79565b60019150506111d1565b60ff841115611c5d57611c5d611d1f565b6001841b915084821115611c7357611c73611d1f565b506111d1565b5060208310610133831016604e8410600b8410161715611ca7575081810a838111156111c9576111c9611d1f565b611cb48484846001611ba2565b808604821115611cc657611cc6611d1f565b02949350505050565b600082821015611ce157611ce1611d1f565b500390565b600082611d1a577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611d9f57600080fd5b50565b8015158114611d9f57600080fdfea264697066735822122066f2ff8f26fcd3f76325cdf113caac4056744ffa34e69711a27eb407276b704864736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b244a41d1161004e578063b244a41d1461016b578063ca0f463314610198578063ef6a2499146101b8578063fc258031146101d8576100bf565b80635cb75276146100c45780638ecf7720146100fc5780639573167d14610129578063a0400a021461014b576100bf565b366100bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611af2565b60405180910390fd5b600080fd5b3480156100d057600080fd5b506100e46100df366004611462565b6101f8565b6040516100f3939291906117b4565b60405180910390f35b34801561010857600080fd5b5061011c6101173660046114a9565b610249565b6040516100f39190611774565b34801561013557600080fd5b506101496101443660046114e1565b610516565b005b34801561015757600080fd5b506101496101663660046114f3565b610ad2565b34801561017757600080fd5b5061018b61018636600461168b565b61117c565b6040516100f3919061177f565b3480156101a457600080fd5b5061011c6101b336600461142a565b6111d8565b3480156101c457600080fd5b5061011c6101d336600461142a565b6111f3565b3480156101e457600080fd5b5061011c6101f336600461166a565b61125e565b6000602081815292815260408082209093529081522080546001820154600490920154909173ffffffffffffffffffffffffffffffffffffffff16906fffffffffffffffffffffffffffffffff1683565b6000808373ffffffffffffffffffffffffffffffffffffffff1663fefbd8757fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a06040518263ffffffff1660e01b81526004016102a5919061177f565b60206040518083038186803b1580156102bd57600080fd5b505afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190611446565b905073ffffffffffffffffffffffffffffffffffffffff81161561046a576040517fc89bb8ba00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063c89bb8ba9061036890879060040161172c565b60206040518083038186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190611446565b905060008273ffffffffffffffffffffffffffffffffffffffff1663f7888aec83620ff1ce6040518363ffffffff1660e01b81526004016103fa92919061174d565b60206040518083038186803b15801561041257600080fd5b505afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190611446565b73ffffffffffffffffffffffffffffffffffffffff161192505050610510565b6040517fa230c52400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a230c524906104bc90869060040161172c565b60206040518083038186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c919061148d565b9150505b92915050565b81438173ffffffffffffffffffffffffffffffffffffffff1663b21634826040518163ffffffff1660e01b815260040160206040518083038186803b15801561055e57600080fd5b505afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190611652565b14156105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119f0565b8073ffffffffffffffffffffffffffffffffffffffff166310fdb0a26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff8381166000908152602081815260408083208684528252808320815160a0810183528154815260018201549095168584015260028101805483518186028101860185528181529596959294938601938301828280156106c157602002820191906000526020600020905b8154815260200190600101908083116106ad575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561071957602002820191906000526020600020905b815481526020019060010190808311610705575b50505091835250506004918201546fffffffffffffffffffffffffffffffff166020909101526040517f40de703e00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff8716916340de703e916107959188910161177f565b60206040518083038186803b1580156107ad57600080fd5b505afa1580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190611446565b905073ffffffffffffffffffffffffffffffffffffffff8116610834576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611b29565b60026040517f76225e7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906376225e739061088a90899089906004016118f8565b602060405180830381600087803b1580156108a457600080fd5b505af11580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190611633565b6005811115610914577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461094b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119b9565b6040517f30490e9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906330490e919061099d90879060040161177f565b600060405180830381600087803b1580156109b757600080fd5b505af11580156109cb573d6000803e3d6000fd5b5050835160208501516080860151604080880151606089015191517fa37ff5e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8d16975063a37ff5e49650610a3995949392906004016117f2565b600060405180830381600087803b158015610a5357600080fd5b505af1158015610a67573d6000803e3d6000fd5b5050505050508073ffffffffffffffffffffffffffffffffffffffff1663d4f7af436040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b50505050505050565b85610add813361127b565b86438173ffffffffffffffffffffffffffffffffffffffff1663b21634826040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2557600080fd5b505afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611652565b1415610b95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b6906119f0565b8073ffffffffffffffffffffffffffffffffffffffff166310fdb0a26040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bdd57600080fd5b505af1158015610bf1573d6000803e3d6000fd5b505050508351855114610c30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611a5e565b60408601516fffffffffffffffffffffffffffffffff90811610610c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611abb565b610c8d86602001516111f3565b610cc3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b69061195c565b6040517fb73dc38900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169063b73dc38990610d15908a9060040161177f565b600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505050506040518060a0016040528087600001518152602001876020015173ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200187604001516fffffffffffffffffffffffffffffffff168152506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610e5e9291906112bf565b5060608201518051610e7a9160038401916020909101906112bf565b5060809190910151600491820180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9092169190911790556040517f17ba7d8500000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff8b16916317ba7d8591610f38917f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab3910161177f565b60206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f889190611446565b90508873ffffffffffffffffffffffffffffffffffffffff1663896ae9ba898373ffffffffffffffffffffffffffffffffffffffff1663966917d08d308a336040518563ffffffff1660e01b8152600401610fe694939291906118ac565b602060405180830381600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611446565b846040518463ffffffff1660e01b815260040161105793929190611788565b600060405180830381600087803b15801561107157600080fd5b505af1158015611085573d6000803e3d6000fd5b50506040517f2b0974d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250632b0974d091506110df908c908c90899060040161191e565b600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b50505050508073ffffffffffffffffffffffffffffffffffffffff1663d4f7af436040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561115a57600080fd5b505af115801561116e573d6000803e3d6000fd5b505050505050505050505050565b600081151561118b858561125e565b1515146111ce5781156111b4576111a3836002611be8565b6111ad9085611b8a565b90506111d1565b6111bf836002611be8565b6111ad9085611ccf565b6111d1565b50825b9392505050565b73ffffffffffffffffffffffffffffffffffffffff16151590565b600073ffffffffffffffffffffffffffffffffffffffff821661dead14801590611235575073ffffffffffffffffffffffffffffffffffffffff821661babe14155b8015610510575073ffffffffffffffffffffffffffffffffffffffff8216614bec141592915050565b6000611271600260ff841685901c611ce6565b6001149392505050565b6112858282610249565b6112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690611a27565b5050565b8280548282559060005260206000209081019282156112fa579160200282015b828111156112fa5782518255916020019190600101906112df565b5061130692915061130a565b5090565b5b80821115611306576000815560010161130b565b600082601f83011261132f578081fd5b8135602067ffffffffffffffff82111561134b5761134b611d4e565b808202611359828201611b60565b838152828101908684018388018501891015611373578687fd5b8693505b85841015611395578035835260019390930192918401918401611377565b50979650505050505050565b600082601f8301126113b1578081fd5b813567ffffffffffffffff8111156113cb576113cb611d4e565b6113fc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b60565b818152846020838601011115611410578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561143b578081fd5b81356111d181611d7d565b600060208284031215611457578081fd5b81516111d181611d7d565b60008060408385031215611474578081fd5b823561147f81611d7d565b946020939093013593505050565b60006020828403121561149e578081fd5b81516111d181611da2565b600080604083850312156114bb578182fd5b82356114c681611d7d565b915060208301356114d681611d7d565b809150509250929050565b60008060408385031215611474578182fd5b60008060008060008086880361010081121561150d578283fd5b873561151881611d7d565b96506020880135955060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082011215611550578283fd5b506040516060810167ffffffffffffffff828210818311171561157557611575611d4e565b8160405260408a0135835260608a0135915061159082611d7d565b81602084015260808a013591506fffffffffffffffffffffffffffffffff821682146115ba578485fd5b81604084015282965060a08a01359250808311156115d6578485fd5b6115e28b848c0161131f565b955060c08a01359250808311156115f7578485fd5b6116038b848c0161131f565b945060e08a0135925080831115611618578384fd5b505061162689828a016113a1565b9150509295509295509295565b600060208284031215611644578081fd5b8151600681106111d1578182fd5b600060208284031215611663578081fd5b5051919050565b6000806040838503121561167c578182fd5b50508035926020909101359150565b60008060006060848603121561169f578081fd5b833592506020840135915060408401356116b881611da2565b809150509250925092565b60008151808452815b818110156116e8576020818501810151868301820152016116cc565b818111156116f95782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b90815260200190565b92835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b92835273ffffffffffffffffffffffffffffffffffffffff9190911660208301526fffffffffffffffffffffffffffffffff16604082015260600190565b600060a08201878352602073ffffffffffffffffffffffffffffffffffffffff8816818501526fffffffffffffffffffffffffffffffff8716604085015260a0606085015281865180845260c0860191508288019350845b818110156118665784518352938301939183019160010161184a565b505084810360808601528551808252908201925081860190845b8181101561189c57825185529383019391830191600101611880565b50929a9950505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152608060408401526118e460808401866116c3565b915080841660608401525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff851682528360208301526060604083015261195360608301846116c3565b95945050505050565b60208082526023908201527f616461707465722061646472657373206973207265736572766564206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b60208082526010908201527f7265656e7472616e637920677561726400000000000000000000000000000000604082015260600190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526031908201527f6d75737420626520616e20657175616c206e756d626572206f6620636f6e666960408201527f67206b65797320616e642076616c756573000000000000000000000000000000606082015260800190565b60208082526018908201527f666c61677320706172616d65746572206f766572666c6f770000000000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b60208082526011908201527f61646170746572206e6f7420666f756e64000000000000000000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715611b8257611b82611d4e565b604052919050565b60008219821115611b9d57611b9d611d1f565b500190565b80825b6001808611611bb45750611bdf565b818704821115611bc657611bc6611d1f565b80861615611bd357918102915b9490941c938002611ba5565b94509492505050565b60006111d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484600082611c1f575060016111d1565b81611c2c575060006111d1565b8160018114611c425760028114611c4c57611c79565b60019150506111d1565b60ff841115611c5d57611c5d611d1f565b6001841b915084821115611c7357611c73611d1f565b506111d1565b5060208310610133831016604e8410600b8410161715611ca7575081810a838111156111c9576111c9611d1f565b611cb48484846001611ba2565b808604821115611cc657611cc6611d1f565b02949350505050565b600082821015611ce157611ce1611d1f565b500390565b600082611d1a577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114611d9f57600080fd5b50565b8015158114611d9f57600080fdfea264697066735822122066f2ff8f26fcd3f76325cdf113caac4056744ffa34e69711a27eb407276b704864736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17825:73",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:73",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:679:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "133:24:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "142:5:73"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "149:5:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "135:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "135:20:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "135:20:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "112:6:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "120:4:73",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "108:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "108:17:73"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "127:3:73"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "104:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "104:27:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "97:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:35:73"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:30:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "189:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "176:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:20:73"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "170:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "205:14:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "215:4:73",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "209:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "260:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "234:2:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "238:18:73",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "231:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:26:73"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "289:21:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "303:2:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "307:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "299:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:11:73"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "293:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "319:38:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "349:2:73"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "353:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:11:73"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "330:14:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:27:73"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "323:3:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "366:16:73",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "379:3:73"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "370:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "398:3:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "403:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "391:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "391:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "391:15:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "415:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "426:3:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "431:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "422:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "422:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "415:3:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "443:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "466:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "454:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:15:73"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "447:3:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "515:24:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "524:5:73"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "531:5:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "517:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "517:20:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "517:20:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "492:6:73"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "500:2:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "488:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "488:15:73"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "505:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:24:73"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "510:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "481:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:33:73"
                  },
                  "nodeType": "YulIf",
                  "src": "478:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "548:14:73",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "557:5:73"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "552:1:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "616:118:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "637:3:73"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "655:3:73"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "642:12:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "642:17:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "630:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "630:30:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "630:30:73"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "673:19:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:73"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "689:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "680:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "680:12:73"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "673:3:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "705:19:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "716:3:73"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "721:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "712:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "712:12:73"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "705:3:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "582:1:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "585:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "579:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "579:9:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "589:18:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "591:14:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "600:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "603:1:73",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "596:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "596:9:73"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "591:1:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "575:3:73",
                    "statements": []
                  },
                  "src": "571:163:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "743:14:73",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "752:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "743:5:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_bytes32_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "58:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "66:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "74:5:73",
                "type": ""
              }
            ],
            "src": "14:749:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "822:556:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:24:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "880:5:73"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "887:5:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "873:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:20:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:20:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "850:6:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "858:4:73",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "846:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "846:17:73"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "865:3:73"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "842:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "842:27:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "835:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:35:73"
                  },
                  "nodeType": "YulIf",
                  "src": "832:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "904:30:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "914:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "914:20:73"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "908:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "975:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "949:2:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:18:73",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "946:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:26:73"
                  },
                  "nodeType": "YulIf",
                  "src": "943:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1004:128:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1046:2:73"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1050:4:73",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1042:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1042:13:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1057:66:73",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1038:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1038:86:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1126:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:97:73"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1019:14:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:113:73"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "1008:7:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "1148:7:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1157:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:19:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1141:19:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:24:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1217:5:73"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1224:5:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:20:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:20:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1183:6:73"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1191:2:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1179:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1179:15:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1196:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1175:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1175:26:73"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1203:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1172:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:35:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1169:2:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "1258:7:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1267:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1254:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1254:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1278:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1274:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1274:17:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1293:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1241:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:55:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1241:55:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "1320:7:73"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1329:2:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1316:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1316:16:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1334:4:73",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1312:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:27:73"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1341:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1305:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:42:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1305:42:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:16:73",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "1365:7:73"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1356:5:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "796:6:73",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "804:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "812:5:73",
                "type": ""
              }
            ],
            "src": "768:610:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1453:189:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1499:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1508:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1516:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1501:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1501:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1501:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1474:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1483:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1470:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1495:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1466:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1463:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1534:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1560:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1547:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1538:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1606:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1579:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1579:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1621:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1631:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1621:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1419:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1430:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1442:6:73",
                "type": ""
              }
            ],
            "src": "1383:259:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1728:182:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1774:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1783:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1791:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1776:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1776:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1776:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1749:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1758:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1745:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1745:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1770:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1741:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1741:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1738:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1809:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1828:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1822:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1822:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1813:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1874:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1847:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1889:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1899:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1889:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1694:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1705:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1717:6:73",
                "type": ""
              }
            ],
            "src": "1647:263:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2002:240:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2048:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2057:6:73"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2065:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2050:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2050:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2050:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2023:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2032:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2019:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2044:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2015:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2012:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2083:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2096:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2096:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2087:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2155:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2128:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2170:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2180:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2194:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2221:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2232:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2217:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2217:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2204:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2194:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1960:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1971:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1983:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1991:6:73",
                "type": ""
              }
            ],
            "src": "1915:327:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2325:179:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2371:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2380:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2388:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2373:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2373:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2373:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2346:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2355:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2367:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2338:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2335:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2406:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2425:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2419:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2410:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2468:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2444:23:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2444:30:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2483:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2493:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2483:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2291:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2302:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2314:6:73",
                "type": ""
              }
            ],
            "src": "2247:257:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:315:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2663:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2672:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2680:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2665:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2665:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2665:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2638:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2647:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2634:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2634:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2659:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2630:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2627:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2698:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2724:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2711:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2711:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2702:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2770:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2743:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2743:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2785:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2795:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2785:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2809:47:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2852:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2837:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2837:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2824:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:32:73"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2813:7:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2892:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2865:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2865:35:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2865:35:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2909:17:73",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2919:7:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2909:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$10505t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2575:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2586:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2606:6:73",
                "type": ""
              }
            ],
            "src": "2509:423:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3045:240:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3091:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3100:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3108:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3093:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3093:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3093:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3066:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3075:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3062:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3062:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3087:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3058:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3058:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3055:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3126:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3152:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3139:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3130:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3198:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3171:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3171:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3213:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3223:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3213:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3237:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3264:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3247:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3237:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$10505t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3003:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3014:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3026:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3034:6:73",
                "type": ""
              }
            ],
            "src": "2937:348:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3556:1624:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3566:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3580:7:73"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3589:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3576:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3576:23:73"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3570:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3624:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3633:6:73"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3641:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3626:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3626:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3626:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3615:2:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3619:3:73",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3611:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3611:12:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3608:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3659:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3685:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3672:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3672:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3663:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3731:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3704:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3704:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3746:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3756:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3746:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3770:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3797:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3808:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3793:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3793:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3780:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3770:6:73"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3911:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3920:6:73"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3928:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3913:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3913:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3913:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3832:2:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3836:66:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3828:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3828:75:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3905:4:73",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3824:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3824:86:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3821:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3946:23:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3966:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3960:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:9:73"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3950:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3978:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4000:6:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4008:4:73",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3996:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3996:17:73"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3982:10:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4022:28:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4032:18:73",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4026:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4109:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4111:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4111:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4111:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4068:10:73"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4080:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4065:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4065:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4088:10:73"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4100:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4085:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4085:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4062:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4062:46:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4059:2:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4147:2:73",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4151:10:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4140:22:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4140:22:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4178:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4203:9:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4214:2:73",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4199:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4199:18:73"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4186:12:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4186:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4171:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4171:48:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4171:48:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4228:49:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4260:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4271:4:73",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4256:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4256:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4243:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4243:34:73"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4232:7:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4313:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4286:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4286:35:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4286:35:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4341:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4349:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:15:73"
                      },
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4354:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4330:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4330:32:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4371:48:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4403:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4414:3:73",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4399:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4399:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4386:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4386:33:73"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "4375:7:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4501:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4510:6:73"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4518:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4503:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4503:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4503:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "4441:7:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "4454:7:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4463:34:73",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4450:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4450:48:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4438:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4438:61:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4431:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4431:69:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4428:2:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4547:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4555:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4543:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4543:15:73"
                      },
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "4560:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4536:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4536:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4536:32:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4577:16:73",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "4587:6:73"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4577:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4602:47:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4633:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4644:3:73",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4629:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4629:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4616:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4616:33:73"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4606:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4676:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4685:6:73"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4693:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4678:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4678:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4678:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4664:6:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4672:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4661:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4661:14:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4658:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4711:77:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4760:9:73"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4771:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4756:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4756:22:73"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4780:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_bytes32_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "4721:34:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:67:73"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4711:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4797:49:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4830:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4841:3:73",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4826:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4826:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4813:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4813:33:73"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4801:8:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4875:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4884:6:73"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4892:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4877:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4877:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4877:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4861:8:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4871:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4858:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:16:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4855:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:79:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4959:9:73"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4970:8:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4955:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4955:24:73"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4981:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_bytes32_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "4920:34:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4920:69:73"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4910:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4998:49:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:3:73",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5014:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5014:33:73"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "5002:8:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5076:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "5085:6:73"
                            },
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "5093:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5078:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5078:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5078:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "5062:8:73"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5072:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5059:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5059:16:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5056:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5111:63:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5144:9:73"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "5155:8:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5140:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5140:24:73"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5166:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5121:18:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5121:53:73"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$10505t_bytes32t_struct$_ProposalInput_$4319_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3482:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3493:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3505:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3513:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3521:6:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3529:6:73",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3537:6:73",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3545:6:73",
                "type": ""
              }
            ],
            "src": "3290:1890:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5282:199:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5328:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5337:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5345:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5330:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5330:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5330:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5303:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5312:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5299:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5299:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5324:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5295:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5292:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5363:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5382:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5376:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5376:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5367:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5425:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5434:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5442:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5427:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5427:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5427:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5414:5:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5421:1:73",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5411:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5411:12:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5404:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5404:20:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5401:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5460:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5470:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5460:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_VotingState_$4405_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5248:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5259:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5271:6:73",
                "type": ""
              }
            ],
            "src": "5185:296:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5567:182:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5613:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5622:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5630:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5615:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5615:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5615:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5588:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5597:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5584:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5584:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5609:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5580:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5580:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5577:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5648:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5667:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5661:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5652:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5713:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5686:26:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5686:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5686:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5728:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5738:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5728:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint160_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5533:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5544:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5556:6:73",
                "type": ""
              }
            ],
            "src": "5486:263:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5835:113:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5881:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5890:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5898:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5883:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5883:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5883:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5856:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5865:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5852:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5852:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5877:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5848:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5848:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "5845:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5916:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5932:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5926:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5926:16:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5916:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5801:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5812:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5824:6:73",
                "type": ""
              }
            ],
            "src": "5754:194:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6040:171:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6086:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6095:6:73"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6103:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6088:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6088:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6088:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6061:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6070:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6057:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6057:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6082:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6053:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6053:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6050:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6121:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6144:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6131:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6121:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6163:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6190:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6201:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6186:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6186:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6173:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6173:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6163:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5998:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6009:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6021:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6029:6:73",
                "type": ""
              }
            ],
            "src": "5953:258:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6317:288:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6363:26:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "6372:6:73"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "6380:6:73"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6365:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6365:22:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6365:22:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6338:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6347:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6334:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6334:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6359:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6330:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6330:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6327:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6398:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6421:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6408:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6408:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6398:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6440:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6467:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6478:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6463:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6463:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6450:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6450:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6440:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6491:45:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6521:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6532:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6517:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6517:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6504:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6504:32:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6495:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6569:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6545:23:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6545:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6545:30:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6584:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6594:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6584:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6267:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6278:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6290:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6298:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6306:6:73",
                "type": ""
              }
            ],
            "src": "6216:389:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6661:485:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6671:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6691:5:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6685:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6685:12:73"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6675:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6713:3:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6718:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6706:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6706:19:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6706:19:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6734:12:73",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "6743:3:73"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6738:1:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6807:110:73",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6821:14:73",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6831:4:73",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "6825:2:73",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6863:3:73"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6868:1:73"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6859:3:73"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6859:11:73"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6872:2:73"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6855:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6855:20:73"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "6891:5:73"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6898:1:73"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6887:3:73"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6887:13:73"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6902:2:73"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6883:3:73"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6883:22:73"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6877:5:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6877:29:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6848:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6848:59:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6848:59:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6766:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6769:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6763:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6763:13:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6777:21:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6779:17:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6788:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6791:4:73",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6784:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6784:12:73"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6779:1:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6759:3:73",
                    "statements": []
                  },
                  "src": "6755:162:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6951:64:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6980:3:73"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "6985:6:73"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6976:3:73"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6976:16:73"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6994:4:73",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6972:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6972:27:73"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "7001:3:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6965:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6965:40:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6965:40:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6932:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6935:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6929:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6929:13:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6926:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7024:116:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7039:3:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7052:6:73"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7060:2:73",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7048:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7048:15:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7065:66:73",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7044:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7044:88:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7035:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7035:98:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7135:4:73",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7031:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7031:109:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7024:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6638:5:73",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6645:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6653:3:73",
                "type": ""
              }
            ],
            "src": "6610:536:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7252:125:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7274:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7285:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7270:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7262:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7304:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7327:42:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7315:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7315:55:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7297:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7297:74:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7297:74:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7221:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7232:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7243:4:73",
                "type": ""
              }
            ],
            "src": "7151:226:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7511:198:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7521:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7533:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7544:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7529:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7529:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7521:4:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7556:52:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7566:42:73",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7560:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7624:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7639:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7647:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7635:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7635:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7617:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7617:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7671:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7682:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7667:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7667:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7691:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7699:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7687:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7687:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7660:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7660:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7660:43:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7472:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7483:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7491:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7502:4:73",
                "type": ""
              }
            ],
            "src": "7382:327:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7809:92:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7819:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7831:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7842:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7827:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7819:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7861:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7886:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7879:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7879:14:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7872:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7872:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7854:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7854:41:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7854:41:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7778:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7789:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7800:4:73",
                "type": ""
              }
            ],
            "src": "7714:187:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8007:76:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8017:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8029:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8040:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8025:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8025:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8017:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8059:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8070:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8052:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8052:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8052:25:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7976:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7987:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7998:4:73",
                "type": ""
              }
            ],
            "src": "7906:177:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8245:241:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8255:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8267:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8278:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8263:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8263:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8255:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8297:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8308:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8290:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8290:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8290:25:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8324:52:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8334:42:73",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8328:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8396:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8407:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8392:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8392:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8416:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8424:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8412:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8412:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8385:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8385:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8385:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8448:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8459:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8444:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8444:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8468:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8476:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8464:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8464:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8437:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8437:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8437:43:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8198:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8209:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8217:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8225:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8236:4:73",
                "type": ""
              }
            ],
            "src": "8088:398:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8648:252:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8658:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8670:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8681:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8666:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8666:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8658:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8700:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8711:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8693:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8693:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8693:25:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8738:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8749:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8734:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8734:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8758:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8766:42:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8754:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8754:55:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8727:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8727:83:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8727:83:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8830:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8841:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8826:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8826:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8850:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8858:34:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8846:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8846:47:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8819:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8819:75:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8819:75:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_uint128__to_t_bytes32_t_address_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8601:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8612:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8620:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8628:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8639:4:73",
                "type": ""
              }
            ],
            "src": "8491:409:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9218:1150:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9228:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9246:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9257:3:73",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9242:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:19:73"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9232:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9277:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9288:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9270:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9270:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9270:25:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9304:12:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9314:2:73",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9308:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9336:9:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9347:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9332:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9332:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9356:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9364:42:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9352:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9352:55:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9325:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9325:83:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9325:83:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9428:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9439:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9424:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9424:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "9448:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9456:34:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9444:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9444:47:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9417:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9417:75:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9417:75:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9512:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9523:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9508:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9508:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9528:3:73",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9501:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9501:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9501:31:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9541:17:73",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "9552:6:73"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "9545:3:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9567:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9587:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9581:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9581:13:73"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9571:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9610:6:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9618:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9603:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9603:22:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9603:22:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9634:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9645:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9656:3:73",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9641:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9641:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9634:3:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9669:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9687:6:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9695:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9683:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:15:73"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "9673:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9707:13:73",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "9716:4:73"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9711:1:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9778:120:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9799:3:73"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9810:6:73"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9804:5:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9804:13:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9792:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9792:26:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9792:26:73"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9831:19:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9842:3:73"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9847:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9838:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9838:12:73"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9831:3:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9863:25:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9877:6:73"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9885:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9873:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9873:15:73"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9863:6:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9740:1:73"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9743:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9737:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9737:13:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9751:18:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9753:14:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9762:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9765:1:73",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9758:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9758:9:73"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9753:1:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9733:3:73",
                    "statements": []
                  },
                  "src": "9729:169:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9918:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9929:3:73",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9914:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9914:19:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9939:3:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9944:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9935:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9935:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9907:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9907:48:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9907:48:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9964:16:73",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9977:3:73"
                  },
                  "variables": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulTypedName",
                      "src": "9968:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9989:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10011:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10005:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10005:13:73"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "9993:8:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10034:3:73"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "10039:8:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10027:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10027:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10027:21:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10057:21:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10070:3:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10075:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10066:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10066:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulIdentifier",
                      "src": "10057:5:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10087:31:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10107:6:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10115:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10103:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10103:15:73"
                  },
                  "variables": [
                    {
                      "name": "srcPtr_1",
                      "nodeType": "YulTypedName",
                      "src": "10091:8:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10127:15:73",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "10138:4:73"
                  },
                  "variables": [
                    {
                      "name": "i_1",
                      "nodeType": "YulTypedName",
                      "src": "10131:3:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10208:132:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "10229:5:73"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10242:8:73"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10236:5:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10236:15:73"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10222:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10222:30:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10222:30:73"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10265:23:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "10278:5:73"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10285:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10274:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10274:14:73"
                        },
                        "variableNames": [
                          {
                            "name": "pos_1",
                            "nodeType": "YulIdentifier",
                            "src": "10265:5:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10301:29:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr_1",
                              "nodeType": "YulIdentifier",
                              "src": "10317:8:73"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10327:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10313:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10313:17:73"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr_1",
                            "nodeType": "YulIdentifier",
                            "src": "10301:8:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i_1",
                        "nodeType": "YulIdentifier",
                        "src": "10162:3:73"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "10167:8:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10159:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10159:17:73"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10177:22:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10179:18:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "i_1",
                              "nodeType": "YulIdentifier",
                              "src": "10190:3:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10195:1:73",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10186:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10186:11:73"
                        },
                        "variableNames": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "10179:3:73"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10155:3:73",
                    "statements": []
                  },
                  "src": "10151:189:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10349:13:73",
                  "value": {
                    "name": "pos_1",
                    "nodeType": "YulIdentifier",
                    "src": "10357:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10349:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_uint128_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes32_t_address_t_uint128_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9155:9:73",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9166:6:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9174:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9182:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9190:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9198:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9209:4:73",
                "type": ""
              }
            ],
            "src": "8905:1463:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10605:319:73",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10615:52:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10625:42:73",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10619:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10683:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10698:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10706:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10694:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10694:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10676:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10676:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10676:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10730:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10741:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10726:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10726:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10750:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10758:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10746:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10746:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10719:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10719:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10719:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10782:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10793:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10778:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10778:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10798:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10771:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10771:31:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10811:55:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10838:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10850:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10861:3:73",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10846:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10846:19:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "10819:18:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10819:47:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10811:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10886:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10897:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10882:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10882:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "10906:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10914:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10902:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10902:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10875:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10875:43:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10550:9:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10561:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10569:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10577:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10585:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10596:4:73",
                "type": ""
              }
            ],
            "src": "10373:551:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11087:168:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11097:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11109:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11120:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11105:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11105:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11097:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11139:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11154:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11162:42:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11150:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11150:55:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11132:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11132:74:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11132:74:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11226:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11237:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11222:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11222:18:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11242:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11215:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11215:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11215:34:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11048:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11059:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11067:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11078:4:73",
                "type": ""
              }
            ],
            "src": "10929:326:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11464:235:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11481:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11496:6:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11504:42:73",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11492:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11492:55:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11474:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11474:74:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11474:74:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11568:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11579:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11564:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11564:18:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11584:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11557:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11557:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11557:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11611:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11622:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11607:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11607:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11627:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11600:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11600:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11600:30:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11639:54:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11666:6:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11678:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11689:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11674:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11674:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "11647:18:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11647:46:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11639:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11417:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11428:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11436:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11444:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11455:4:73",
                "type": ""
              }
            ],
            "src": "11260:439:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11878:225:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11895:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11906:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11888:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11888:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11929:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11940:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11925:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11925:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11945:2:73",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11918:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11918:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11918:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11968:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11979:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11964:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11964:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11984:34:73",
                        "type": "",
                        "value": "adapter address is reserved addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11957:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11957:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11957:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12039:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12050:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12035:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12035:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12055:5:73",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12028:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12028:33:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12028:33:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12070:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12082:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12093:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12078:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12078:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12070:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11855:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11869:4:73",
                "type": ""
              }
            ],
            "src": "11704:399:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12282:171:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12299:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12310:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12292:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12292:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12292:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12333:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12344:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12329:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12329:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12349:2:73",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12322:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12322:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12322:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12372:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12383:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12368:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12368:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12388:23:73",
                        "type": "",
                        "value": "proposal did not pass"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12361:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12361:51:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12361:51:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12421:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12433:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12444:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12429:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12429:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12421:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12259:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12273:4:73",
                "type": ""
              }
            ],
            "src": "12108:345:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12632:166:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12649:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12660:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12642:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12642:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12642:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12683:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12694:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12679:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12679:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12699:2:73",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12672:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12672:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12672:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12722:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12733:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12718:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12718:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12738:18:73",
                        "type": "",
                        "value": "reentrancy guard"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12711:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12711:46:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12711:46:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12766:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12778:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12789:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12774:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12774:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12766:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_60e180261f16bcfe623a1bce5a5f0beea96a22b1b61dc7be9d2d0fba3efc7414__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12609:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12623:4:73",
                "type": ""
              }
            ],
            "src": "12458:340:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12977:160:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12994:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13005:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12987:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12987:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13028:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13039:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13024:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13024:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13044:2:73",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13017:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13017:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13017:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13067:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13078:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13063:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13063:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13083:12:73",
                        "type": "",
                        "value": "onlyMember"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13056:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13056:40:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13056:40:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13105:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13117:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13128:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13113:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13113:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13105:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12954:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12968:4:73",
                "type": ""
              }
            ],
            "src": "12803:334:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13316:239:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13333:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13344:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13326:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13326:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13367:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13378:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13363:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13363:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13383:2:73",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13356:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13356:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13406:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13417:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13402:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13402:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13422:34:73",
                        "type": "",
                        "value": "must be an equal number of confi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13395:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13395:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13395:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13477:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13488:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13473:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13473:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13493:19:73",
                        "type": "",
                        "value": "g keys and values"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13466:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13466:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13466:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13522:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13534:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13545:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13530:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13530:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13522:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13293:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13307:4:73",
                "type": ""
              }
            ],
            "src": "13142:413:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13734:174:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13751:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13762:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13744:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13744:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13744:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13785:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13796:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13781:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13781:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13801:2:73",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13774:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13774:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13774:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13824:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13835:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13820:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13820:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13840:26:73",
                        "type": "",
                        "value": "flags parameter overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13813:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13813:54:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13813:54:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13876:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13888:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13899:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13884:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13884:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13876:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13711:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13725:4:73",
                "type": ""
              }
            ],
            "src": "13560:348:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14087:165:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14104:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14115:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14097:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14097:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14097:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14138:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14149:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14134:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14134:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14154:2:73",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14127:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14127:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14127:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14177:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14188:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14173:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14173:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14193:17:73",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14166:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14166:45:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14166:45:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14220:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14232:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14243:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14228:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14228:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14220:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14064:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14078:4:73",
                "type": ""
              }
            ],
            "src": "13913:339:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14431:167:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14448:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14459:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14441:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14441:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14441:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14482:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14493:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14478:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14478:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14498:2:73",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14471:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14471:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14471:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14521:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14532:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14517:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14517:18:73"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14537:19:73",
                        "type": "",
                        "value": "adapter not found"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14510:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14510:47:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14510:47:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14566:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14578:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14589:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14574:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14574:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14566:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14408:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14422:4:73",
                "type": ""
              }
            ],
            "src": "14257:341:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14704:76:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14714:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14726:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14737:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14722:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14722:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14714:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14756:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14767:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14749:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14749:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14749:25:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14673:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14684:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14695:4:73",
                "type": ""
              }
            ],
            "src": "14603:177:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14829:207:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14839:19:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14855:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14849:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14849:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "14839:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14867:35:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "14889:6:73"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "14897:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14885:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14885:17:73"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "14871:10:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14977:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "14979:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14979:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14979:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "14920:10:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14932:18:73",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14917:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14917:34:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "14956:10:73"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14968:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14953:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14953:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "14914:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14914:62:73"
                  },
                  "nodeType": "YulIf",
                  "src": "14911:2:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15015:2:73",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "15019:10:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15008:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15008:22:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15008:22:73"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "14809:4:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14818:6:73",
                "type": ""
              }
            ],
            "src": "14785:251:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15089:80:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15116:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15118:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15118:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15118:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15105:1:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15112:1:73"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15108:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15108:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15102:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15102:13:73"
                  },
                  "nodeType": "YulIf",
                  "src": "15099:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15147:16:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15158:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15161:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15154:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15154:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15147:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15072:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15075:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15081:3:73",
                "type": ""
              }
            ],
            "src": "15041:128:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15251:376:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15261:15:73",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "15270:6:73"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "15261:5:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15285:13:73",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "15293:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "15285:4:73"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15332:289:73",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15346:11:73",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15356:1:73",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "15350:2:73",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15398:9:73",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "15400:5:73"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "15383:8:73"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15393:2:73"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "15380:2:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15380:16:73"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15373:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15373:24:73"
                        },
                        "nodeType": "YulIf",
                        "src": "15370:2:73"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15448:22:73",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "15450:16:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15450:18:73"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15450:18:73"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15426:4:73"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "15436:3:73"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "15441:4:73"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "15432:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15432:14:73"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "15423:2:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15423:24:73"
                        },
                        "nodeType": "YulIf",
                        "src": "15420:2:73"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15504:29:73",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15506:25:73",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "15519:5:73"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "15526:4:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "15515:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15515:16:73"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "15506:5:73"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "15490:8:73"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "15500:2:73"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "15486:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15486:17:73"
                        },
                        "nodeType": "YulIf",
                        "src": "15483:2:73"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15546:23:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15558:4:73"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15564:4:73"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "15554:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15554:15:73"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "15546:4:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15582:29:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "15598:2:73"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "15602:8:73"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "15594:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15594:17:73"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "15582:8:73"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "15315:4:73",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15320:3:73",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15311:3:73",
                    "statements": []
                  },
                  "src": "15307:314:73"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "15202:6:73",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "15210:5:73",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "15217:8:73",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "15227:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "15235:5:73",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "15242:4:73",
                "type": ""
              }
            ],
            "src": "15174:453:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15702:129:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15712:113:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "15742:4:73"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "15748:8:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15758:66:73",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "15721:20:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15721:104:73"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "15712:5:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "15673:4:73",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "15679:8:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "15692:5:73",
                "type": ""
              }
            ],
            "src": "15632:199:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15900:858:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15938:52:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15952:10:73",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15961:1:73",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "15952:5:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "15975:5:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "15920:8:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15913:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15913:16:73"
                  },
                  "nodeType": "YulIf",
                  "src": "15910:2:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16023:52:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16037:10:73",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16046:1:73",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16037:5:73"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16060:5:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16009:4:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16002:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16002:12:73"
                  },
                  "nodeType": "YulIf",
                  "src": "15999:2:73"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16111:52:73",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "16125:10:73",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16134:1:73",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16125:5:73"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "16148:5:73"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16104:59:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16109:1:73",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16179:176:73",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16214:22:73",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "16216:16:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16216:18:73"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16216:18:73"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "16199:8:73"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16209:3:73",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "16196:2:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16196:17:73"
                            },
                            "nodeType": "YulIf",
                            "src": "16193:2:73"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "16249:25:73",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "16262:8:73"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16272:1:73",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "16258:3:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16258:16:73"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16249:5:73"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16305:22:73",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "16307:16:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16307:18:73"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16307:18:73"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "16293:5:73"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "16300:3:73"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "16290:2:73"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16290:14:73"
                            },
                            "nodeType": "YulIf",
                            "src": "16287:2:73"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "16340:5:73"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16172:183:73",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16177:1:73",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "16091:4:73"
                  },
                  "nodeType": "YulSwitch",
                  "src": "16084:271:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16453:123:73",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16467:28:73",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "16480:4:73"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "16486:8:73"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "16476:3:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16476:19:73"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16467:5:73"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16526:22:73",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "16528:16:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16528:18:73"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16528:18:73"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "16514:5:73"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "16521:3:73"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "16511:2:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16511:14:73"
                        },
                        "nodeType": "YulIf",
                        "src": "16508:2:73"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16561:5:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "16377:4:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16383:2:73",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16374:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16374:12:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "16391:8:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16401:2:73",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16388:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16388:16:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16370:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16370:35:73"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "16414:4:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16420:3:73",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16411:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16411:13:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "16429:8:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16439:2:73",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16426:2:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16426:16:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16407:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16407:36:73"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "16367:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16367:77:73"
                  },
                  "nodeType": "YulIf",
                  "src": "16364:2:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16585:65:73",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16627:1:73",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16630:4:73"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "16636:8:73"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "16646:3:73"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "16608:18:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16608:42:73"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "16589:7:73",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "16598:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16692:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16694:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16694:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16694:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "16665:7:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "16678:3:73"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "16683:6:73"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "16674:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16674:16:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16662:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16662:29:73"
                  },
                  "nodeType": "YulIf",
                  "src": "16659:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16723:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "16736:7:73"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "16745:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "16732:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16732:20:73"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "16723:5:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "15866:4:73",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "15872:8:73",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "15882:3:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "15890:5:73",
                "type": ""
              }
            ],
            "src": "15836:922:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16812:76:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16834:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16836:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16836:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16836:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16828:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16831:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16825:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16825:8:73"
                  },
                  "nodeType": "YulIf",
                  "src": "16822:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16865:17:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16877:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16880:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16873:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16873:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "16865:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16794:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16797:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "16803:4:73",
                "type": ""
              }
            ],
            "src": "16763:125:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16931:228:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16962:168:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "16983:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16986:77:73",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16976:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16976:88:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16976:88:73"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17084:1:73",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17087:4:73",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17077:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17077:15:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17077:15:73"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "17112:1:73"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17115:4:73",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17105:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17105:15:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17105:15:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16951:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16944:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16944:9:73"
                  },
                  "nodeType": "YulIf",
                  "src": "16941:2:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17139:14:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17148:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17151:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "17144:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17144:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "17139:1:73"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16916:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16919:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16925:1:73",
                "type": ""
              }
            ],
            "src": "16893:266:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17196:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17213:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17216:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17206:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17206:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17206:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17310:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17313:4:73",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17303:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17303:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17303:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17334:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17337:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17327:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17327:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17327:15:73"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "17164:184:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17385:152:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17402:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17405:77:73",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17395:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17395:88:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17395:88:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17499:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17502:4:73",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17492:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17492:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17492:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17523:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17526:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17516:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17516:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17516:15:73"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "17353:184:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17589:109:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17676:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17685:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17688:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17678:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17678:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17678:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17612:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17623:5:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17630:42:73",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "17619:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17619:54:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17609:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17609:65:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17602:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17602:73:73"
                  },
                  "nodeType": "YulIf",
                  "src": "17599:2:73"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17578:5:73",
                "type": ""
              }
            ],
            "src": "17542:156:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17747:76:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17801:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17810:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17813:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17803:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17803:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17803:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17770:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17791:5:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17784:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17784:13:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17777:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17777:21:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17767:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17767:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17760:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17760:40:73"
                  },
                  "nodeType": "YulIf",
                  "src": "17757:2:73"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17736:5:73",
                "type": ""
              }
            ],
            "src": "17703:120:73"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_array$_t_bytes32_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := mul(_1, _2)\n        let dst := allocateMemory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _3), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocateMemory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$10505t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$10505t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$10505t_bytes32t_struct$_ProposalInput_$4319_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 256) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        if slt(add(_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0), 0x60) { revert(value4, value4) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        let _2 := 0xffffffffffffffff\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, calldataload(add(headStart, 64)))\n        let value_1 := calldataload(add(headStart, 0x60))\n        validator_revert_t_address(value_1)\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xffffffffffffffffffffffffffffffff))) { revert(value4, value4) }\n        mstore(add(memPtr, 64), value_2)\n        value2 := memPtr\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, _2) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_bytes32_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _2) { revert(value4, value4) }\n        value4 := abi_decode_t_array$_t_bytes32_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 224))\n        if gt(offset_2, _2) { revert(value5, value5) }\n        value5 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_enum$_VotingState_$4405_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint160_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint128__to_t_bytes32_t_address_t_uint128__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint128_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes32_t_address_t_uint128_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), 160)\n        let pos := tail_1\n        let length := mload(value3)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value3, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 128), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value4)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value4, _1)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$10505_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"adapter address is reserved addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"proposal did not pass\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60e180261f16bcfe623a1bce5a5f0beea96a22b1b61dc7be9d2d0fba3efc7414__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"reentrancy guard\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"onlyMember\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"must be an equal number of confi\")\n        mstore(add(headStart, 96), \"g keys and values\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"flags parameter overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"adapter not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1356:3433:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1356:3433:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:25;;;;;;;;;;:::i;:::-;;;;;;;;1356:3433;;;;1626:72;;;;;;;;;;-1:-1:-1;1626:72:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1697:407:39;;;;;;;;;;-1:-1:-1;1697:407:39;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4023:764:8:-;;;;;;;;;;-1:-1:-1;4023:764:8;;;;;:::i;:::-;;:::i;:::-;;2363:1288;;;;;;;;;;-1:-1:-1;2363:1288:8;;;;;:::i;:::-;;:::i;2838:363:28:-;;;;;;;;;;-1:-1:-1;2838:363:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3494:111::-;;;;;;;;;;-1:-1:-1;3494:111:28;;;;;:::i;:::-;;:::i;3277:143::-;;;;;;;;;;-1:-1:-1;3277:143:28;;;;;:::i;:::-;;:::i;2704:128::-;;;;;;;;;;-1:-1:-1;2704:128:28;;;;;:::i;:::-;;:::i;1626:72:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1697:407:39:-;1798:4;1818:19;1840:3;:14;;;2060:17:28;1840:20:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1818:42;-1:-1:-1;1874:27:39;;;;1870:191;;1938:32;;;;;1917:18;;1938:25;;;;;;:32;;1964:5;;1938:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1917:53;;2049:1;2005:11;1991:36;;;2028:10;2438:7:28;1991:55:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;;1984:66;;;;;;1870:191;2078:19;;;;;:12;;;;;;:19;;2091:5;;2078:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2071:26;;;1697:407;;;;;:::o;4023:764:8:-;4143:3;1661:12:38;1643:3;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;1635:59;;;;;;;;;;;;:::i;:::-;1704:3;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4196:23:8::1;::::0;;::::1;4162:31;4196:23:::0;;;::::1;::::0;;;;;;;:35;;;;;;;;4162:69;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;:31;;:69;4196:35;;4162:69;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4162:69:8;;;-1:-1:-1;;4162:69:8::1;::::0;;::::1;::::0;::::1;;;::::0;;::::1;::::0;4275:29:::1;::::0;;;;4162:69;;-1:-1:-1;4162:69:8::1;::::0;4275:17:::1;::::0;::::1;::::0;::::1;::::0;:29:::1;::::0;4293:10;;4275:29:::1;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4242:63:::0;-1:-1:-1;4323:37:8::1;::::0;::::1;4315:67;;;;;;;;;;;;:::i;:::-;4476:24;4414:42;::::0;;;;:25:::1;::::0;::::1;::::0;::::1;::::0;:42:::1;::::0;4440:3;;4445:10;;4414:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:86;;;;;;;;;;;;;;;;;4393:154;;;;;;;;;;;;:::i;:::-;4558:31;::::0;;;;:19:::1;::::0;::::1;::::0;::::1;::::0;:31:::1;::::0;4578:10;;4558:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4631:18:8;;4663:23:::1;::::0;::::1;::::0;4700:14:::1;::::0;::::1;::::0;4728:13:::1;::::0;;::::1;::::0;4755:15:::1;::::0;::::1;::::0;4599:181;;;;;:18:::1;::::0;::::1;::::0;-1:-1:-1;4599:18:8::1;::::0;-1:-1:-1;4599:181:8::1;::::0;4631:18;4663:23;4700:14;4755:15;4599:181:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1731:1:38;;1742:3:::0;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:764:8;;;:::o;2363:1288::-;2605:3;1396:28:39;1408:3;1413:10;1396:11;:28::i;:::-;2626:3:8::1;1661:12:38;1643:3;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;1635:59;;;;;;;;;;;;:::i;:::-;1704:3;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2677:6:8::2;:13;2662:4;:11;:28;2641:124;;;;;;;;;;;;:::i;:::-;2784:14;::::0;::::2;::::0;2801:17:::2;2784:34:::0;;::::2;;2776:71;;;;;;;;;;;;:::i;:::-;2879:45;2900:8;:23;;;2879:20;:45::i;:::-;2858:127;;;;;;;;;;;;:::i;:::-;2996:30;::::0;;;;:18:::2;::::0;::::2;::::0;::::2;::::0;:30:::2;::::0;3015:10;;2996:30:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3075:160;;;;;;;;3104:8;:18;;;3075:160;;;;3136:8;:23;;;3075:160;;;;;;3173:4;3075:160;;;;3191:6;3075:160;;;;3211:8;:14;;;3075:160;;;;::::0;3037:9:::2;:23:::0;3055:3:::2;3037:23;;;;;;;;;;;;;;;:35;3061:10;3037:35;;;;;;;;;;;:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3037:198:8::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;3037:198:8::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;::::2;;::::0;;::::2;::::0;;;::::2;::::0;;3279:29:::2;::::0;;;;-1:-1:-1;;3279:21:8::2;::::0;::::2;::::0;::::2;::::0;:29:::2;::::0;1219:19:28::2;::::0;3279:29:8::2;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3246:63;;3320:3;:19;;;3353:10;3377:14;:31;;;3426:3;3455:4;3478;3500:10;3377:147;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3546:14;3320:251;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3581:63:8::2;::::0;;;;:40:::2;::::0;::::2;::::0;-1:-1:-1;3581:40:8::2;::::0;-1:-1:-1;3581:63:8::2;::::0;3622:3;;3627:10;;3639:4;;3581:63:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1731:1:38;1742:3:::1;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1434:1:39;2363:1288:8::0;;;;;;;:::o;2838:363:28:-;2947:7;2994:5;2970:29;;:20;2978:5;2985:4;2970:7;:20::i;:::-;:29;;;2966:229;;3019:5;3015:127;;;3059:7;3062:4;3059:1;:7;:::i;:::-;3051:15;;:5;:15;:::i;:::-;3044:22;;;;3015:127;3120:7;3123:4;3120:1;:7;:::i;:::-;3112:15;;:5;:15;:::i;3015:127::-;2966:229;;;-1:-1:-1;3179:5:28;2966:229;2838:363;;;;;:::o;3494:111::-;3578:20;;;;;3494:111::o;3277:143::-;3342:4;3365:13;;;2272:6;3365:13;;;;:30;;-1:-1:-1;3382:13:28;;;2327:6;3382:13;;3365:30;:48;;;;-1:-1:-1;3399:14:28;;;2383:6;3399:14;;3358:55;3277:143;-1:-1:-1;;3277:143:28:o;2704:128::-;2771:4;2794:26;2819:1;2795:20;;;;;;2794:26;:::i;:::-;2824:1;2794:31;;2704:128;-1:-1:-1;;;2704:128:28:o;1558:133:39:-;1643:26;1658:3;1663:5;1643:14;:26::i;:::-;1635:49;;;;;;;;;;;;:::i;:::-;1558:133;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:749:73;;127:3;120:4;112:6;108:17;104:27;94:2;;149:5;142;135:20;94:2;189:6;176:20;215:4;238:18;234:2;231:26;228:2;;;260:18;;:::i;:::-;307:2;303;299:11;330:27;353:2;349;345:11;330:27;:::i;:::-;391:15;;;422:12;;;;454:15;;;488;;;484:24;;481:33;-1:-1:-1;478:2:73;;;531:5;524;517:20;478:2;557:5;548:14;;571:163;585:2;582:1;579:9;571:163;;;642:17;;630:30;;603:1;596:9;;;;;680:12;;;;712;;571:163;;;-1:-1:-1;752:5:73;84:679;-1:-1:-1;;;;;;;84:679:73:o;768:610::-;;865:3;858:4;850:6;846:17;842:27;832:2;;887:5;880;873:20;832:2;927:6;914:20;953:18;949:2;946:26;943:2;;;975:18;;:::i;:::-;1019:113;1126:4;1057:66;1050:4;1046:2;1042:13;1038:86;1034:97;1019:113;:::i;:::-;1157:2;1148:7;1141:19;1203:3;1196:4;1191:2;1183:6;1179:15;1175:26;1172:35;1169:2;;;1224:5;1217;1210:20;1169:2;1293;1286:4;1278:6;1274:17;1267:4;1258:7;1254:18;1241:55;1316:16;;;1334:4;1312:27;1305:42;;;;1320:7;822:556;-1:-1:-1;;822:556:73:o;1383:259::-;;1495:2;1483:9;1474:7;1470:23;1466:32;1463:2;;;1516:6;1508;1501:22;1463:2;1560:9;1547:23;1579:33;1606:5;1579:33;:::i;1647:263::-;;1770:2;1758:9;1749:7;1745:23;1741:32;1738:2;;;1791:6;1783;1776:22;1738:2;1828:9;1822:16;1847:33;1874:5;1847:33;:::i;1915:327::-;;;2044:2;2032:9;2023:7;2019:23;2015:32;2012:2;;;2065:6;2057;2050:22;2012:2;2109:9;2096:23;2128:33;2155:5;2128:33;:::i;:::-;2180:5;2232:2;2217:18;;;;2204:32;;-1:-1:-1;;;2002:240:73:o;2247:257::-;;2367:2;2355:9;2346:7;2342:23;2338:32;2335:2;;;2388:6;2380;2373:22;2335:2;2425:9;2419:16;2444:30;2468:5;2444:30;:::i;2509:423::-;;;2659:2;2647:9;2638:7;2634:23;2630:32;2627:2;;;2680:6;2672;2665:22;2627:2;2724:9;2711:23;2743:33;2770:5;2743:33;:::i;:::-;2795:5;-1:-1:-1;2852:2:73;2837:18;;2824:32;2865:35;2824:32;2865:35;:::i;:::-;2919:7;2909:17;;;2617:315;;;;;:::o;2937:348::-;;;3087:2;3075:9;3066:7;3062:23;3058:32;3055:2;;;3108:6;3100;3093:22;3290:1890;;;;;;;3589:9;3580:7;3576:23;3619:3;3615:2;3611:12;3608:2;;;3641:6;3633;3626:22;3608:2;3685:9;3672:23;3704:33;3731:5;3704:33;:::i;:::-;3756:5;-1:-1:-1;3808:2:73;3793:18;;3780:32;;-1:-1:-1;3905:4:73;3836:66;3828:75;;3824:86;3821:2;;;3928:6;3920;3913:22;3821:2;;3966;3960:9;4008:4;4000:6;3996:17;4032:18;4100:6;4088:10;4085:22;4080:2;4068:10;4065:18;4062:46;4059:2;;;4111:18;;:::i;:::-;4151:10;4147:2;4140:22;4214:2;4203:9;4199:18;4186:32;4178:6;4171:48;4271:4;4260:9;4256:20;4243:34;4228:49;;4286:35;4313:7;4286:35;:::i;:::-;4354:7;4349:2;4341:6;4337:15;4330:32;4414:3;4403:9;4399:19;4386:33;4371:48;;4463:34;4454:7;4450:48;4441:7;4438:61;4428:2;;4518:6;4510;4503:22;4428:2;4560:7;4555:2;4547:6;4543:15;4536:32;4587:6;4577:16;;4644:3;4633:9;4629:19;4616:33;4602:47;;4672:2;4664:6;4661:14;4658:2;;;4693:6;4685;4678:22;4658:2;4721:67;4780:7;4771:6;4760:9;4756:22;4721:67;:::i;:::-;4711:77;;4841:3;4830:9;4826:19;4813:33;4797:49;;4871:2;4861:8;4858:16;4855:2;;;4892:6;4884;4877:22;4855:2;4920:69;4981:7;4970:8;4959:9;4955:24;4920:69;:::i;:::-;4910:79;;5042:3;5031:9;5027:19;5014:33;4998:49;;5072:2;5062:8;5059:16;5056:2;;;5093:6;5085;5078:22;5056:2;;;5121:53;5166:7;5155:8;5144:9;5140:24;5121:53;:::i;:::-;5111:63;;;3556:1624;;;;;;;;:::o;5185:296::-;;5324:2;5312:9;5303:7;5299:23;5295:32;5292:2;;;5345:6;5337;5330:22;5292:2;5382:9;5376:16;5421:1;5414:5;5411:12;5401:2;;5442:6;5434;5427:22;5754:194;;5877:2;5865:9;5856:7;5852:23;5848:32;5845:2;;;5898:6;5890;5883:22;5845:2;-1:-1:-1;5926:16:73;;5835:113;-1:-1:-1;5835:113:73:o;5953:258::-;;;6082:2;6070:9;6061:7;6057:23;6053:32;6050:2;;;6103:6;6095;6088:22;6050:2;-1:-1:-1;;6131:23:73;;;6201:2;6186:18;;;6173:32;;-1:-1:-1;6040:171:73:o;6216:389::-;;;;6359:2;6347:9;6338:7;6334:23;6330:32;6327:2;;;6380:6;6372;6365:22;6327:2;6421:9;6408:23;6398:33;;6478:2;6467:9;6463:18;6450:32;6440:42;;6532:2;6521:9;6517:18;6504:32;6545:30;6569:5;6545:30;:::i;:::-;6594:5;6584:15;;;6317:288;;;;;:::o;6610:536::-;;6691:5;6685:12;6718:6;6713:3;6706:19;6743:3;6755:162;6769:6;6766:1;6763:13;6755:162;;;6831:4;6887:13;;;6883:22;;6877:29;6859:11;;;6855:20;;6848:59;6784:12;6755:162;;;6935:6;6932:1;6929:13;6926:2;;;7001:3;6994:4;6985:6;6980:3;6976:16;6972:27;6965:40;6926:2;-1:-1:-1;7060:2:73;7048:15;7065:66;7044:88;7035:98;;;;7135:4;7031:109;;6661:485;-1:-1:-1;;6661:485:73:o;7151:226::-;7327:42;7315:55;;;;7297:74;;7285:2;7270:18;;7252:125::o;7382:327::-;7566:42;7635:15;;;7617:34;;7687:15;;7682:2;7667:18;;7660:43;7544:2;7529:18;;7511:198::o;7714:187::-;7879:14;;7872:22;7854:41;;7842:2;7827:18;;7809:92::o;7906:177::-;8052:25;;;8040:2;8025:18;;8007:76::o;8088:398::-;8290:25;;;8334:42;8412:15;;;8407:2;8392:18;;8385:43;8464:15;8459:2;8444:18;;8437:43;8278:2;8263:18;;8245:241::o;8491:409::-;8693:25;;;8766:42;8754:55;;;;8749:2;8734:18;;8727:83;8858:34;8846:47;8841:2;8826:18;;8819:75;8681:2;8666:18;;8648:252::o;8905:1463::-;;9257:3;9246:9;9242:19;9288:6;9277:9;9270:25;9314:2;9364:42;9356:6;9352:55;9347:2;9336:9;9332:18;9325:83;9456:34;9448:6;9444:47;9439:2;9428:9;9424:18;9417:75;9528:3;9523:2;9512:9;9508:18;9501:31;9552:6;9587;9581:13;9618:6;9610;9603:22;9656:3;9645:9;9641:19;9634:26;;9695:2;9687:6;9683:15;9669:29;;9716:4;9729:169;9743:6;9740:1;9737:13;9729:169;;;9804:13;;9792:26;;9873:15;;;;9838:12;;;;9765:1;9758:9;9729:169;;;-1:-1:-1;;9935:19:73;;;9929:3;9914:19;;9907:48;10005:13;;10027:21;;;10066:12;;;;-1:-1:-1;10103:15:73;;;;10138:4;10151:189;10167:8;10162:3;10159:17;10151:189;;;10236:15;;10222:30;;10274:14;;;;10313:17;;;;10195:1;10186:11;10151:189;;;-1:-1:-1;10357:5:73;;9218:1150;-1:-1:-1;;;;;;;;;;9218:1150:73:o;10373:551::-;;10625:42;10706:2;10698:6;10694:15;10683:9;10676:34;10758:2;10750:6;10746:15;10741:2;10730:9;10726:18;10719:43;10798:3;10793:2;10782:9;10778:18;10771:31;10819:47;10861:3;10850:9;10846:19;10838:6;10819:47;:::i;:::-;10811:55;;10914:2;10906:6;10902:15;10897:2;10886:9;10882:18;10875:43;;10605:319;;;;;;;:::o;10929:326::-;11162:42;11150:55;;;;11132:74;;11237:2;11222:18;;11215:34;11120:2;11105:18;;11087:168::o;11260:439::-;;11504:42;11496:6;11492:55;11481:9;11474:74;11584:6;11579:2;11568:9;11564:18;11557:34;11627:2;11622;11611:9;11607:18;11600:30;11647:46;11689:2;11678:9;11674:18;11666:6;11647:46;:::i;:::-;11639:54;11464:235;-1:-1:-1;;;;;11464:235:73:o;11704:399::-;11906:2;11888:21;;;11945:2;11925:18;;;11918:30;11984:34;11979:2;11964:18;;11957:62;12055:5;12050:2;12035:18;;12028:33;12093:3;12078:19;;11878:225::o;12108:345::-;12310:2;12292:21;;;12349:2;12329:18;;;12322:30;12388:23;12383:2;12368:18;;12361:51;12444:2;12429:18;;12282:171::o;12458:340::-;12660:2;12642:21;;;12699:2;12679:18;;;12672:30;12738:18;12733:2;12718:18;;12711:46;12789:2;12774:18;;12632:166::o;12803:334::-;13005:2;12987:21;;;13044:2;13024:18;;;13017:30;13083:12;13078:2;13063:18;;13056:40;13128:2;13113:18;;12977:160::o;13142:413::-;13344:2;13326:21;;;13383:2;13363:18;;;13356:30;13422:34;13417:2;13402:18;;13395:62;13493:19;13488:2;13473:18;;13466:47;13545:3;13530:19;;13316:239::o;13560:348::-;13762:2;13744:21;;;13801:2;13781:18;;;13774:30;13840:26;13835:2;13820:18;;13813:54;13899:2;13884:18;;13734:174::o;13913:339::-;14115:2;14097:21;;;14154:2;14134:18;;;14127:30;14193:17;14188:2;14173:18;;14166:45;14243:2;14228:18;;14087:165::o;14257:341::-;14459:2;14441:21;;;14498:2;14478:18;;;14471:30;14537:19;14532:2;14517:18;;14510:47;14589:2;14574:18;;14431:167::o;14785:251::-;14855:2;14849:9;14885:17;;;14932:18;14917:34;;14953:22;;;14914:62;14911:2;;;14979:18;;:::i;:::-;15015:2;15008:22;14829:207;;-1:-1:-1;14829:207:73:o;15041:128::-;;15112:1;15108:6;15105:1;15102:13;15099:2;;;15118:18;;:::i;:::-;-1:-1:-1;15154:9:73;;15089:80::o;15174:453::-;15270:6;15293:5;15307:314;15356:1;15393:2;15383:8;15380:16;15370:2;;15400:5;;;15370:2;15441:4;15436:3;15432:14;15426:4;15423:24;15420:2;;;15450:18;;:::i;:::-;15500:2;15490:8;15486:17;15483:2;;;15515:16;;;;15483:2;15594:17;;;;;15554:15;;15307:314;;;15251:376;;;;;;;:::o;15632:199::-;;15721:104;15758:66;15748:8;15742:4;15836:922;15920:8;15910:2;;-1:-1:-1;15961:1:73;15975:5;;15910:2;16009:4;15999:2;;-1:-1:-1;16046:1:73;16060:5;;15999:2;16091:4;16109:1;16104:59;;;;16177:1;16172:183;;;;16084:271;;16104:59;16134:1;16125:10;;16148:5;;;16172:183;16209:3;16199:8;16196:17;16193:2;;;16216:18;;:::i;:::-;16272:1;16262:8;16258:16;16249:25;;16300:3;16293:5;16290:14;16287:2;;;16307:18;;:::i;:::-;16340:5;;;16084:271;;16439:2;16429:8;16426:16;16420:3;16414:4;16411:13;16407:36;16401:2;16391:8;16388:16;16383:2;16377:4;16374:12;16370:35;16367:77;16364:2;;;-1:-1:-1;16476:19:73;;;16511:14;;;16508:2;;;16528:18;;:::i;16364:2::-;16608:42;16646:3;16636:8;16630:4;16627:1;16608:42;:::i;:::-;16683:6;16678:3;16674:16;16665:7;16662:29;16659:2;;;16694:18;;:::i;:::-;16732:20;;15900:858;-1:-1:-1;;;;15900:858:73:o;16763:125::-;;16831:1;16828;16825:8;16822:2;;;16836:18;;:::i;:::-;-1:-1:-1;16873:9:73;;16812:76::o;16893:266::-;;16951:1;16941:2;;16986:77;16983:1;16976:88;17087:4;17084:1;17077:15;17115:4;17112:1;17105:15;16941:2;-1:-1:-1;17144:9:73;;16931:228::o;17164:184::-;17216:77;17213:1;17206:88;17313:4;17310:1;17303:15;17337:4;17334:1;17327:15;17353:184;17405:77;17402:1;17395:88;17502:4;17499:1;17492:15;17526:4;17523:1;17516:15;17542:156;17630:42;17623:5;17619:54;17612:5;17609:65;17599:2;;17688:1;17685;17678:12;17599:2;17589:109;:::o;17703:120::-;17791:5;17784:13;17777:21;17770:5;17767:32;17757:2;;17813:1;17810;17803:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./interfaces/IManaging.sol\";\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\nimport \"../guards/MemberGuard.sol\";\nimport \"../guards/AdapterGuard.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract ManagingContract is\n    IManaging,\n    DaoConstants,\n    MemberGuard,\n    AdapterGuard\n{\n    struct ProposalDetails {\n        bytes32 adapterId;\n        address adapterAddress;\n        bytes32[] keys;\n        uint256[] values;\n        uint128 flags;\n    }\n\n    mapping(address => mapping(bytes32 => ProposalDetails)) public proposals;\n\n    /*\n     * default fallback function to prevent from sending ether to the contract\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Creates a proposal to replace, remove or add an adapter.\n     * @dev If the adapterAddress is equal to 0x0, the adapterId is removed from the registry if available.\n     * @dev If the adapterAddress is a reserved address, it reverts.\n     * @dev keys and value must have the same length.\n     * @dev proposalId can not be reused.\n     * @param dao The dao address.\n     * @param proposalId The guild kick proposal id.\n     * @param proposal proposal details\n     */\n    function submitProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        ProposalInput memory proposal,\n        bytes32[] memory keys,\n        uint256[] memory values,\n        bytes memory data\n    ) external override onlyMember(dao) reentrancyGuard(dao) {\n        require(\n            keys.length == values.length,\n            \"must be an equal number of config keys and values\"\n        );\n\n        require(proposal.flags < type(uint128).max, \"flags parameter overflow\");\n\n        require(\n            isNotReservedAddress(proposal.adapterAddress),\n            \"adapter address is reserved address\"\n        );\n\n        dao.submitProposal(proposalId);\n\n        proposals[address(dao)][proposalId] = ProposalDetails(\n            proposal.adapterId,\n            proposal.adapterAddress,\n            keys,\n            values,\n            proposal.flags\n        );\n\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n\n        dao.sponsorProposal(\n            proposalId,\n            votingContract.getSenderAddress(\n                dao,\n                address(this),\n                data,\n                msg.sender\n            ),\n            address(votingContract)\n        );\n        votingContract.startNewVotingForProposal(dao, proposalId, data);\n    }\n\n    /**\n     * @notice Processes a proposal that was sponsored.\n     * @dev Only members can process a proposal.\n     * @dev Only if the voting pass the proposal is processed.\n     * @dev Reverts when the adapter address is already in use and it is an adapter addition.\n     * @param dao The dao address.\n     * @param proposalId The guild kick proposal id.\n     */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n        reentrancyGuard(dao)\n    {\n        ProposalDetails memory proposal = proposals[address(dao)][proposalId];\n\n        IVoting votingContract = IVoting(dao.votingAdapter(proposalId));\n        require(address(votingContract) != address(0), \"adapter not found\");\n\n        require(\n            votingContract.voteResult(dao, proposalId) ==\n                IVoting.VotingState.PASS,\n            \"proposal did not pass\"\n        );\n\n        dao.processProposal(proposalId);\n        dao.replaceAdapter(\n            proposal.adapterId,\n            proposal.adapterAddress,\n            proposal.flags,\n            proposal.keys,\n            proposal.values\n        );\n    }\n}\n",
  "sourcePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/Managing.sol",
  "ast": {
    "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/Managing.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        13125
      ],
      "Address": [
        17052
      ],
      "BankExtension": [
        11618
      ],
      "DaoConstants": [
        8558
      ],
      "DaoRegistry": [
        10505
      ],
      "IERC20": [
        15482
      ],
      "IExtension": [
        10518
      ],
      "IManaging": [
        4347
      ],
      "IVoting": [
        4446
      ],
      "ManagingContract": [
        2275
      ],
      "MemberGuard": [
        13226
      ],
      "SafeERC20": [
        15743
      ]
    },
    "id": 2276,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2026,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IManaging.sol",
        "file": "./interfaces/IManaging.sol",
        "id": 2027,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 4348,
        "src": "58:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2028,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 8559,
        "src": "95:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2029,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 10506,
        "src": "130:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 4447,
        "src": "164:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 2031,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 13227,
        "src": "209:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/AdapterGuard.sol",
        "file": "../guards/AdapterGuard.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 13126,
        "src": "245:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2034,
              "name": "IManaging",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4347,
              "src": "1389:9:8"
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "1389:9:8"
          },
          {
            "baseName": {
              "id": 2036,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "1404:12:8"
            },
            "id": 2037,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:12:8"
          },
          {
            "baseName": {
              "id": 2038,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13226,
              "src": "1422:11:8"
            },
            "id": 2039,
            "nodeType": "InheritanceSpecifier",
            "src": "1422:11:8"
          },
          {
            "baseName": {
              "id": 2040,
              "name": "AdapterGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13125,
              "src": "1439:12:8"
            },
            "id": 2041,
            "nodeType": "InheritanceSpecifier",
            "src": "1439:12:8"
          }
        ],
        "contractDependencies": [
          4347,
          8558,
          13125,
          13226
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2033,
          "nodeType": "StructuredDocumentation",
          "src": "283:1071:8",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 2275,
        "linearizedBaseContracts": [
          2275,
          13125,
          13226,
          8558,
          4347
        ],
        "name": "ManagingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ManagingContract.ProposalDetails",
            "id": 2054,
            "members": [
              {
                "constant": false,
                "id": 2043,
                "mutability": "mutable",
                "name": "adapterId",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1491:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2042,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1491:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2045,
                "mutability": "mutable",
                "name": "adapterAddress",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1518:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2044,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2048,
                "mutability": "mutable",
                "name": "keys",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1550:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ArrayTypeName",
                  "src": "1550:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2051,
                "mutability": "mutable",
                "name": "values",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1574:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ArrayTypeName",
                  "src": "1574:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2053,
                "mutability": "mutable",
                "name": "flags",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1600:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2052,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1600:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 2275,
            "src": "1458:162:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 2061,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 2275,
            "src": "1626:72:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails))"
            },
            "typeName": {
              "id": 2060,
              "keyType": {
                "id": 2055,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1634:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1626:55:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails))"
              },
              "valueType": {
                "id": 2059,
                "keyType": {
                  "id": 2056,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1653:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1645:35:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                  "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 2058,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2057,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2054,
                    "src": "1664:15:8"
                  },
                  "referencedDeclaration": 2054,
                  "src": "1664:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage_ptr",
                    "typeString": "struct ManagingContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "1826:42:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1843:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2064,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1836:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:25:8"
                }
              ]
            },
            "id": 2069,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:2:8"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:8"
            },
            "scope": 2275,
            "src": "1799:69:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4338
            ],
            "body": {
              "id": 2190,
              "nodeType": "Block",
              "src": "2631:1020:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2097,
                            "name": "keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2081,
                            "src": "2662:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2662:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2099,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "2677:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2677:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2662:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520616e20657175616c206e756d626572206f6620636f6e666967206b65797320616e642076616c756573",
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2704:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        },
                        "value": "must be an equal number of config keys and values"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        }
                      ],
                      "id": 2096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2641:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:124:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:124:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2106,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "2784:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "flags",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4318,
                          "src": "2784:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2806:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2109,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2806:7:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2108,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "2801:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2801:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "2801:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2784:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "666c61677320706172616d65746572206f766572666c6f77",
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2820:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1",
                          "typeString": "literal_string \"flags parameter overflow\""
                        },
                        "value": "flags parameter overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1",
                          "typeString": "literal_string \"flags parameter overflow\""
                        }
                      ],
                      "id": 2105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2776:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2119,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "2900:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                                "typeString": "struct IManaging.ProposalInput memory"
                              }
                            },
                            "id": 2120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "adapterAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4316,
                            "src": "2900:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2118,
                          "name": "isNotReservedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8541,
                          "src": "2879:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure returns (bool)"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2879:45:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164617074657220616464726573732069732072657365727665642061646472657373",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2938:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79",
                          "typeString": "literal_string \"adapter address is reserved address\""
                        },
                        "value": "adapter address is reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79",
                          "typeString": "literal_string \"adapter address is reserved address\""
                        }
                      ],
                      "id": 2117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2858:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:127:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2128,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3015:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2125,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "2996:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9854,
                      "src": "2996:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:30:8"
                },
                {
                  "expression": {
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2131,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2061,
                          "src": "3037:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref))"
                          }
                        },
                        "id": 2137,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 2134,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "3055:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 2133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3047:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3047:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3037:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                          "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref)"
                        }
                      },
                      "id": 2138,
                      "indexExpression": {
                        "id": 2136,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3061:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3037:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                        "typeString": "struct ManagingContract.ProposalDetails storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2140,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3104:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "adapterId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4314,
                          "src": "3104:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 2142,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3136:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "adapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4316,
                          "src": "3136:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2144,
                          "name": "keys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "3173:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        {
                          "id": 2145,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2084,
                          "src": "3191:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 2146,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3211:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "flags",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4318,
                          "src": "3211:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 2139,
                        "name": "ProposalDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "3075:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProposalDetails_$2054_storage_ptr_$",
                          "typeString": "type(struct ManagingContract.ProposalDetails storage pointer)"
                        }
                      },
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3075:160:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                        "typeString": "struct ManagingContract.ProposalDetails memory"
                      }
                    },
                    "src": "3037:198:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                      "typeString": "struct ManagingContract.ProposalDetails storage ref"
                    }
                  },
                  "id": 2150,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:198:8"
                },
                {
                  "assignments": [
                    2153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2153,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2190,
                      "src": "3246:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$4446",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2152,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2151,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4446,
                          "src": "3246:7:8"
                        },
                        "referencedDeclaration": 4446,
                        "src": "3246:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2160,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2157,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8344,
                            "src": "3301:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2155,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "3279:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "3279:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3279:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2154,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4446,
                      "src": "3271:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$4446",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3246:63:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2164,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3353:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2167,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "3426:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2170,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3455:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ManagingContract_$2275",
                                  "typeString": "contract ManagingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ManagingContract_$2275",
                                  "typeString": "contract ManagingContract"
                                }
                              ],
                              "id": 2169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3447:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2168,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3447:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3447:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2172,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2086,
                            "src": "3478:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 2173,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3500:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3500:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2165,
                            "name": "votingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "3377:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4434,
                          "src": "3377:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                            "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                          }
                        },
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3377:147:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2178,
                            "name": "votingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "3546:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          ],
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3538:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3538:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2161,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "3320:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9917,
                      "src": "3320:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address) external"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3320:251:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:251:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2185,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "3622:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2186,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3627:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2187,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "3639:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2182,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "3581:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "3581:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3581:63:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2189,
                  "nodeType": "ExpressionStatement",
                  "src": "3581:63:8"
                }
              ]
            },
            "documentation": {
              "id": 2070,
              "nodeType": "StructuredDocumentation",
              "src": "1874:484:8",
              "text": " @notice Creates a proposal to replace, remove or add an adapter.\n @dev If the adapterAddress is equal to 0x0, the adapterId is removed from the registry if available.\n @dev If the adapterAddress is a reserved address, it reverts.\n @dev keys and value must have the same length.\n @dev proposalId can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param proposal proposal details"
            },
            "functionSelector": "a0400a02",
            "id": 2191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2090,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2073,
                    "src": "2605:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2091,
                "modifierName": {
                  "id": 2089,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13146,
                  "src": "2594:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:15:8"
              },
              {
                "arguments": [
                  {
                    "id": 2093,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2073,
                    "src": "2626:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2094,
                "modifierName": {
                  "id": 2092,
                  "name": "reentrancyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13064,
                  "src": "2610:15:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2610:20:8"
              }
            ],
            "name": "submitProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2088,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2585:8:8"
            },
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2396:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2071,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10505,
                      "src": "2396:11:8"
                    },
                    "referencedDeclaration": 10505,
                    "src": "2396:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2421:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2449:29:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                    "typeString": "struct IManaging.ProposalInput"
                  },
                  "typeName": {
                    "id": 2077,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2076,
                      "name": "ProposalInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4319,
                      "src": "2449:13:8"
                    },
                    "referencedDeclaration": 4319,
                    "src": "2449:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalInput_$4319_storage_ptr",
                      "typeString": "struct IManaging.ProposalInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "keys",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2488:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2079,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2488:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2080,
                    "nodeType": "ArrayTypeName",
                    "src": "2488:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2519:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2082,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2519:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2083,
                    "nodeType": "ArrayTypeName",
                    "src": "2519:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2552:17:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:189:8"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:8"
            },
            "scope": 2275,
            "src": "2363:1288:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4346
            ],
            "body": {
              "id": 2273,
              "nodeType": "Block",
              "src": "4152:635:8",
              "statements": [
                {
                  "assignments": [
                    2206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2206,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "4162:31:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                        "typeString": "struct ManagingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 2205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2204,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2054,
                          "src": "4162:15:8"
                        },
                        "referencedDeclaration": 2054,
                        "src": "4162:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage_ptr",
                          "typeString": "struct ManagingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2215,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2207,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "4196:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 2212,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 2210,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4214:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4206:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4206:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4206:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4196:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                        "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 2214,
                    "indexExpression": {
                      "id": 2213,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "4220:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4196:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                      "typeString": "struct ManagingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4162:69:8"
                },
                {
                  "assignments": [
                    2218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "4242:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$4446",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2217,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2216,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4446,
                          "src": "4242:7:8"
                        },
                        "referencedDeclaration": 4446,
                        "src": "4242:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2225,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2222,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2197,
                            "src": "4293:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2220,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4275:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votingAdapter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9046,
                          "src": "4275:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4275:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2219,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4446,
                      "src": "4267:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4267:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$4446",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4242:63:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2229,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2218,
                              "src": "4331:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            ],
                            "id": 2228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4323:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4323:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4358:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4350:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4350:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4350:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4323:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646170746572206e6f7420666f756e64",
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4362:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e",
                          "typeString": "literal_string \"adapter not found\""
                        },
                        "value": "adapter not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e",
                          "typeString": "literal_string \"adapter not found\""
                        }
                      ],
                      "id": 2226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4315:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4315:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2238,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$4405",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2242,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2195,
                              "src": "4440:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 2243,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "4445:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 2240,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2218,
                              "src": "4414:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4445,
                            "src": "4414:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_bytes32_$returns$_t_enum$_VotingState_$4405_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4414:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$4405",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2245,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4446,
                              "src": "4476:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4405,
                            "src": "4476:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$4405_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 2247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "4476:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$4405",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "4414:86:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4514:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 2239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4393:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4393:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
                  "src": "4393:154:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2255,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "4578:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2252,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "4558:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9952,
                      "src": "4558:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4558:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "4558:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2261,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4631:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "adapterId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2043,
                        "src": "4631:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2263,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4663:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "adapterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2045,
                        "src": "4663:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2265,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4700:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flags",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2053,
                        "src": "4700:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 2267,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4728:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2048,
                        "src": "4728:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2269,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4755:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "values",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2051,
                        "src": "4755:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2258,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "4599:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "replaceAdapter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "4599:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint128_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint128,bytes32[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:181:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2272,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:181:8"
                }
              ]
            },
            "documentation": {
              "id": 2192,
              "nodeType": "StructuredDocumentation",
              "src": "3657:361:8",
              "text": " @notice Processes a proposal that was sponsored.\n @dev Only members can process a proposal.\n @dev Only if the voting pass the proposal is processed.\n @dev Reverts when the adapter address is already in use and it is an adapter addition.\n @param dao The dao address.\n @param proposalId The guild kick proposal id."
            },
            "functionSelector": "9573167d",
            "id": 2274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2201,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2195,
                    "src": "4143:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2202,
                "modifierName": {
                  "id": 2200,
                  "name": "reentrancyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13064,
                  "src": "4127:15:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:20:8"
              }
            ],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4110:8:8"
            },
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "4048:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2194,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2193,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10505,
                      "src": "4048:11:8"
                    },
                    "referencedDeclaration": 10505,
                    "src": "4048:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "4065:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:37:8"
            },
            "returnParameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4152:0:8"
            },
            "scope": 2275,
            "src": "4023:764:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2276,
        "src": "1356:3433:8"
      }
    ],
    "src": "0:4790:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/Managing.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        13125
      ],
      "Address": [
        17052
      ],
      "BankExtension": [
        11618
      ],
      "DaoConstants": [
        8558
      ],
      "DaoRegistry": [
        10505
      ],
      "IERC20": [
        15482
      ],
      "IExtension": [
        10518
      ],
      "IManaging": [
        4347
      ],
      "IVoting": [
        4446
      ],
      "ManagingContract": [
        2275
      ],
      "MemberGuard": [
        13226
      ],
      "SafeERC20": [
        15743
      ]
    },
    "id": 2276,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2026,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IManaging.sol",
        "file": "./interfaces/IManaging.sol",
        "id": 2027,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 4348,
        "src": "58:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2028,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 8559,
        "src": "95:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2029,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 10506,
        "src": "130:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 2030,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 4447,
        "src": "164:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 2031,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 13227,
        "src": "209:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/tribute-contracts/contracts/guards/AdapterGuard.sol",
        "file": "../guards/AdapterGuard.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2276,
        "sourceUnit": 13126,
        "src": "245:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2034,
              "name": "IManaging",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4347,
              "src": "1389:9:8"
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "1389:9:8"
          },
          {
            "baseName": {
              "id": 2036,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "1404:12:8"
            },
            "id": 2037,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:12:8"
          },
          {
            "baseName": {
              "id": 2038,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13226,
              "src": "1422:11:8"
            },
            "id": 2039,
            "nodeType": "InheritanceSpecifier",
            "src": "1422:11:8"
          },
          {
            "baseName": {
              "id": 2040,
              "name": "AdapterGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13125,
              "src": "1439:12:8"
            },
            "id": 2041,
            "nodeType": "InheritanceSpecifier",
            "src": "1439:12:8"
          }
        ],
        "contractDependencies": [
          4347,
          8558,
          13125,
          13226
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2033,
          "nodeType": "StructuredDocumentation",
          "src": "283:1071:8",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 2275,
        "linearizedBaseContracts": [
          2275,
          13125,
          13226,
          8558,
          4347
        ],
        "name": "ManagingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ManagingContract.ProposalDetails",
            "id": 2054,
            "members": [
              {
                "constant": false,
                "id": 2043,
                "mutability": "mutable",
                "name": "adapterId",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1491:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2042,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1491:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2045,
                "mutability": "mutable",
                "name": "adapterAddress",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1518:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2044,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2048,
                "mutability": "mutable",
                "name": "keys",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1550:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ArrayTypeName",
                  "src": "1550:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2051,
                "mutability": "mutable",
                "name": "values",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1574:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ArrayTypeName",
                  "src": "1574:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2053,
                "mutability": "mutable",
                "name": "flags",
                "nodeType": "VariableDeclaration",
                "scope": 2054,
                "src": "1600:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2052,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1600:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 2275,
            "src": "1458:162:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 2061,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 2275,
            "src": "1626:72:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails))"
            },
            "typeName": {
              "id": 2060,
              "keyType": {
                "id": 2055,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1634:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1626:55:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails))"
              },
              "valueType": {
                "id": 2059,
                "keyType": {
                  "id": 2056,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1653:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1645:35:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                  "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 2058,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2057,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2054,
                    "src": "1664:15:8"
                  },
                  "referencedDeclaration": 2054,
                  "src": "1664:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage_ptr",
                    "typeString": "struct ManagingContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "1826:42:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1843:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2064,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1836:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:25:8"
                }
              ]
            },
            "id": 2069,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:2:8"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:8"
            },
            "scope": 2275,
            "src": "1799:69:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4338
            ],
            "body": {
              "id": 2190,
              "nodeType": "Block",
              "src": "2631:1020:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2097,
                            "name": "keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2081,
                            "src": "2662:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2662:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2099,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "2677:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2677:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2662:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520616e20657175616c206e756d626572206f6620636f6e666967206b65797320616e642076616c756573",
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2704:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        },
                        "value": "must be an equal number of config keys and values"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        }
                      ],
                      "id": 2096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2641:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:124:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:124:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2106,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "2784:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "flags",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4318,
                          "src": "2784:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2806:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 2109,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2806:7:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 2108,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "2801:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2801:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "2801:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2784:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "666c61677320706172616d65746572206f766572666c6f77",
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2820:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1",
                          "typeString": "literal_string \"flags parameter overflow\""
                        },
                        "value": "flags parameter overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c26e504e81e1cb1b21c5106a3cbcd79ea9ee58d09926c13ceadf71bbb5341bc1",
                          "typeString": "literal_string \"flags parameter overflow\""
                        }
                      ],
                      "id": 2105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2776:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2119,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "2900:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                                "typeString": "struct IManaging.ProposalInput memory"
                              }
                            },
                            "id": 2120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "adapterAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4316,
                            "src": "2900:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2118,
                          "name": "isNotReservedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8541,
                          "src": "2879:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure returns (bool)"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2879:45:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164617074657220616464726573732069732072657365727665642061646472657373",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2938:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79",
                          "typeString": "literal_string \"adapter address is reserved address\""
                        },
                        "value": "adapter address is reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d7b92a6b8b2d0205826f4d31382b78ec5c06f8b1644ab84317ee067326c8d79",
                          "typeString": "literal_string \"adapter address is reserved address\""
                        }
                      ],
                      "id": 2117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2858:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:127:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2128,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3015:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2125,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "2996:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9854,
                      "src": "2996:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:30:8"
                },
                {
                  "expression": {
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2131,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2061,
                          "src": "3037:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref))"
                          }
                        },
                        "id": 2137,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 2134,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "3055:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 2133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3047:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3047:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3037:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                          "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref)"
                        }
                      },
                      "id": 2138,
                      "indexExpression": {
                        "id": 2136,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3061:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3037:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                        "typeString": "struct ManagingContract.ProposalDetails storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2140,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3104:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "adapterId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4314,
                          "src": "3104:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 2142,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3136:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "adapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4316,
                          "src": "3136:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2144,
                          "name": "keys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "3173:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        {
                          "id": 2145,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2084,
                          "src": "3191:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 2146,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2078,
                            "src": "3211:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                              "typeString": "struct IManaging.ProposalInput memory"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "flags",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4318,
                          "src": "3211:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 2139,
                        "name": "ProposalDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "3075:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProposalDetails_$2054_storage_ptr_$",
                          "typeString": "type(struct ManagingContract.ProposalDetails storage pointer)"
                        }
                      },
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3075:160:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                        "typeString": "struct ManagingContract.ProposalDetails memory"
                      }
                    },
                    "src": "3037:198:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                      "typeString": "struct ManagingContract.ProposalDetails storage ref"
                    }
                  },
                  "id": 2150,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:198:8"
                },
                {
                  "assignments": [
                    2153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2153,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2190,
                      "src": "3246:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$4446",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2152,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2151,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4446,
                          "src": "3246:7:8"
                        },
                        "referencedDeclaration": 4446,
                        "src": "3246:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2160,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2157,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8344,
                            "src": "3301:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2155,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "3279:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "3279:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3279:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2154,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4446,
                      "src": "3271:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$4446",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3246:63:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2164,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3353:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2167,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "3426:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2170,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3455:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ManagingContract_$2275",
                                  "typeString": "contract ManagingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ManagingContract_$2275",
                                  "typeString": "contract ManagingContract"
                                }
                              ],
                              "id": 2169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3447:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2168,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3447:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3447:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2172,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2086,
                            "src": "3478:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 2173,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3500:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3500:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2165,
                            "name": "votingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "3377:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          },
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4434,
                          "src": "3377:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                            "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                          }
                        },
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3377:147:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2178,
                            "name": "votingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "3546:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVoting_$4446",
                              "typeString": "contract IVoting"
                            }
                          ],
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3538:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3538:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2161,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "3320:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9917,
                      "src": "3320:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address) external"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3320:251:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2181,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:251:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2185,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "3622:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2186,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3627:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2187,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "3639:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2182,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "3581:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "3581:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3581:63:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2189,
                  "nodeType": "ExpressionStatement",
                  "src": "3581:63:8"
                }
              ]
            },
            "documentation": {
              "id": 2070,
              "nodeType": "StructuredDocumentation",
              "src": "1874:484:8",
              "text": " @notice Creates a proposal to replace, remove or add an adapter.\n @dev If the adapterAddress is equal to 0x0, the adapterId is removed from the registry if available.\n @dev If the adapterAddress is a reserved address, it reverts.\n @dev keys and value must have the same length.\n @dev proposalId can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param proposal proposal details"
            },
            "functionSelector": "a0400a02",
            "id": 2191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2090,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2073,
                    "src": "2605:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2091,
                "modifierName": {
                  "id": 2089,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13146,
                  "src": "2594:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:15:8"
              },
              {
                "arguments": [
                  {
                    "id": 2093,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2073,
                    "src": "2626:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2094,
                "modifierName": {
                  "id": 2092,
                  "name": "reentrancyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13064,
                  "src": "2610:15:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2610:20:8"
              }
            ],
            "name": "submitProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2088,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2585:8:8"
            },
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2396:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2071,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10505,
                      "src": "2396:11:8"
                    },
                    "referencedDeclaration": 10505,
                    "src": "2396:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2421:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2449:29:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalInput_$4319_memory_ptr",
                    "typeString": "struct IManaging.ProposalInput"
                  },
                  "typeName": {
                    "id": 2077,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2076,
                      "name": "ProposalInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4319,
                      "src": "2449:13:8"
                    },
                    "referencedDeclaration": 4319,
                    "src": "2449:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalInput_$4319_storage_ptr",
                      "typeString": "struct IManaging.ProposalInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "keys",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2488:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2079,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2488:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2080,
                    "nodeType": "ArrayTypeName",
                    "src": "2488:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2519:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2082,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2519:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2083,
                    "nodeType": "ArrayTypeName",
                    "src": "2519:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "2552:17:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:189:8"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:0:8"
            },
            "scope": 2275,
            "src": "2363:1288:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4346
            ],
            "body": {
              "id": 2273,
              "nodeType": "Block",
              "src": "4152:635:8",
              "statements": [
                {
                  "assignments": [
                    2206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2206,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "4162:31:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                        "typeString": "struct ManagingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 2205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2204,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2054,
                          "src": "4162:15:8"
                        },
                        "referencedDeclaration": 2054,
                        "src": "4162:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage_ptr",
                          "typeString": "struct ManagingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2215,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2207,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "4196:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 2212,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 2210,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4214:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4206:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4206:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4206:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4196:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2054_storage_$",
                        "typeString": "mapping(bytes32 => struct ManagingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 2214,
                    "indexExpression": {
                      "id": 2213,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "4220:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4196:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2054_storage",
                      "typeString": "struct ManagingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4162:69:8"
                },
                {
                  "assignments": [
                    2218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "4242:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$4446",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2217,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2216,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4446,
                          "src": "4242:7:8"
                        },
                        "referencedDeclaration": 4446,
                        "src": "4242:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$4446",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2225,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2222,
                            "name": "proposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2197,
                            "src": "4293:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2220,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4275:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votingAdapter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9046,
                          "src": "4275:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4275:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2219,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4446,
                      "src": "4267:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4267:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$4446",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4242:63:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2229,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2218,
                              "src": "4331:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            ],
                            "id": 2228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4323:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4323:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4358:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4350:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4350:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4350:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4323:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646170746572206e6f7420666f756e64",
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4362:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e",
                          "typeString": "literal_string \"adapter not found\""
                        },
                        "value": "adapter not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e86b3215bb21145108f32efe1c711d5ca5cf79d6c428ee45cb99505e0447197e",
                          "typeString": "literal_string \"adapter not found\""
                        }
                      ],
                      "id": 2226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4315:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4315:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2238,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$4405",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2242,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2195,
                              "src": "4440:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 2243,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "4445:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 2240,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2218,
                              "src": "4414:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$4446",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4445,
                            "src": "4414:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$10505_$_t_bytes32_$returns$_t_enum$_VotingState_$4405_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4414:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$4405",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2245,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4446,
                              "src": "4476:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$4446_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4405,
                            "src": "4476:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$4405_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 2247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "4476:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$4405",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "4414:86:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4514:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 2239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4393:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4393:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
                  "src": "4393:154:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2255,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "4578:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2252,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "4558:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9952,
                      "src": "4558:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4558:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "4558:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2261,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4631:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "adapterId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2043,
                        "src": "4631:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2263,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4663:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "adapterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2045,
                        "src": "4663:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2265,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4700:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flags",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2053,
                        "src": "4700:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 2267,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4728:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2048,
                        "src": "4728:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2269,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "4755:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2054_memory_ptr",
                            "typeString": "struct ManagingContract.ProposalDetails memory"
                          }
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "values",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2051,
                        "src": "4755:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2258,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "4599:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "replaceAdapter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9616,
                      "src": "4599:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint128_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint128,bytes32[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 2271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:181:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2272,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:181:8"
                }
              ]
            },
            "documentation": {
              "id": 2192,
              "nodeType": "StructuredDocumentation",
              "src": "3657:361:8",
              "text": " @notice Processes a proposal that was sponsored.\n @dev Only members can process a proposal.\n @dev Only if the voting pass the proposal is processed.\n @dev Reverts when the adapter address is already in use and it is an adapter addition.\n @param dao The dao address.\n @param proposalId The guild kick proposal id."
            },
            "functionSelector": "9573167d",
            "id": 2274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2201,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2195,
                    "src": "4143:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2202,
                "modifierName": {
                  "id": 2200,
                  "name": "reentrancyGuard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13064,
                  "src": "4127:15:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:20:8"
              }
            ],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4110:8:8"
            },
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "4048:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2194,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2193,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10505,
                      "src": "4048:11:8"
                    },
                    "referencedDeclaration": 10505,
                    "src": "4048:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$10505",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "4065:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:37:8"
            },
            "returnParameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4152:0:8"
            },
            "scope": 2275,
            "src": "4023:764:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2276,
        "src": "1356:3433:8"
      }
    ],
    "src": "0:4790:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-15T21:34:50.422Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "processProposal(address,bytes32)": {
        "details": "Only members can process a proposal.Only if the voting pass the proposal is processed.Reverts when the adapter address is already in use and it is an adapter addition.",
        "params": {
          "dao": "The dao address.",
          "proposalId": "The guild kick proposal id."
        }
      },
      "submitProposal(address,bytes32,(bytes32,address,uint128),bytes32[],uint256[],bytes)": {
        "details": "If the adapterAddress is equal to 0x0, the adapterId is removed from the registry if available.If the adapterAddress is a reserved address, it reverts.keys and value must have the same length.proposalId can not be reused.",
        "params": {
          "dao": "The dao address.",
          "proposal": "proposal details",
          "proposalId": "The guild kick proposal id."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isNotReservedAddress(address)": {
        "notice": "Checks if a given address is reserved."
      },
      "isNotZeroAddress(address)": {
        "notice": "Checks if a given address is zeroed."
      },
      "processProposal(address,bytes32)": {
        "notice": "Processes a proposal that was sponsored."
      },
      "submitProposal(address,bytes32,(bytes32,address,uint128),bytes32[],uint256[],bytes)": {
        "notice": "Creates a proposal to replace, remove or add an adapter."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}