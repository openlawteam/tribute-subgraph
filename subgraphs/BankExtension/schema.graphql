type TributeDao @entity {
  "Unique identifier and primary key of the `TributeDao` entity"
  id: ID! # Set to `${tribute.id}
  "The address of the DAO"
  daoAddress: Bytes
  "The name of the DAO"
  daoName: String
  "The DAO creator address"
  creator: Bytes
  createdAt: String
}

type Bank @entity {
  "Unique identifier and primary key of the `Bank` entity"
  id: ID! # Set to `${tribute.id}-bank-${bank.id}`
  "The bank of the DAO"
  bankAddress: Bytes!
  totalUnits: String
  totalUnitsIssued: String
}

type Token @entity {
  "Unique identifier and primary key of the `Token` entity"
  id: ID! # Set to `${tribute.id}-token-${token.id}`
  name: String
  symbol: String
  balance: BigInt
  tokenAddress: Bytes!
  totalSupply: BigInt
  tokenHolders: [TokenHolder!]! @derivedFrom(field: "token")
}

type TokenHolder @entity {
  "Unique identifier and primary key of the `TokenHolder` entity"
  id: ID! # Set to `${tribute.id}-tokenholder-${memberAddress.id}`
  createdAt: String
  memberAddress: Bytes
  token: Token! # `${tribute.id}-token-${token.id}`
}
